{
  "swagger": "2.0",
  "info": {
    "title": "Merchant Web API",
    "version": "v1"
  },
  "host": "api.vourity.com",
  "basePath": "/merchantwebapi/v1",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    },
    "apiKeyQuery": {
      "type": "apiKey",
      "name": "subscription-key",
      "in": "query"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "paths": {
    "/accept-invite/{merchantID}": {
      "patch": {
        "description": "Accept Merchant Invite by merchantID",
        "operationId": "AcceptMerchantInvite",
        "summary": "Accept Merchant Invite by merchantID",
        "parameters": [
          {
            "name": "merchantID",
            "in": "path",
            "description": "merchantID of the merchant document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified merchantID doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/change-email/{id}": {
      "post": {
        "description": "Change Email",
        "operationId": "ChangeEmail",
        "summary": "Change Email",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "changeEmail",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ChangeEmail"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/change-name/{id}": {
      "post": {
        "description": "Change Name",
        "operationId": "ChangeName",
        "summary": "Change Name",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "changeName",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ChangeName"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/change-pass/{id}": {
      "post": {
        "description": "Change Password",
        "operationId": "ChangePassword",
        "summary": "Change Password",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "changePassword",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ChangePassword"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/confirmsignup": {
      "post": {
        "description": "Confirm Signup",
        "operationId": "ConfirmSignup",
        "summary": "Confirm Signup",
        "parameters": [
          {
            "name": "confirmSignup",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ConfirmSignup"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/countries": {
      "get": {
        "description": "GetCountries",
        "operationId": "GetCountries",
        "summary": "Returns All Countries",
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Countries"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/account-lists": {
      "post": {
        "description": "Create AccountLists",
        "operationId": "CreateAccountLists",
        "summary": "Create AccountLists",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountList",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AccountList"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/AccountList"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/balance-accounts": {
      "post": {
        "description": "Create BalanceAccounts",
        "operationId": "CreateBalanceAccounts",
        "summary": "Create BalanceAccounts",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "balanceAccount",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BalanceAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BalanceAccount"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/bank-accounts/{merchantID}": {
      "post": {
        "description": "Create Bank-Accounts",
        "operationId": "CreateBank-Accounts",
        "summary": "Create Bank-Accounts",
        "parameters": [
          {
            "name": "merchantID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "bankAccount",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BankAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/BankAccount"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "description": "Retrieve BankAccount by merchantID",
        "operationId": "GetBankAccounts",
        "summary": "Returns BankAccount by merchantID",
        "parameters": [
          {
            "name": "merchantID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/BankAccountArray"
            }
          },
          "404": {
            "description": "The specified merchantId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/business-units": {
      "post": {
        "description": "Create business unit",
        "operationId": "CreateBusinessUnit",
        "summary": "Create business unit",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "businessUnits",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BusinessUnits"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BusinessUnits"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/consents": {
      "post": {
        "description": "Create Consents",
        "operationId": "CreateConsents",
        "summary": "Create Consents",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "consents",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Consents"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Consents"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "description": "Delete Consents by consentKey",
        "operationId": "DeleteConsents",
        "summary": "Delete Consents by ConsentKey",
        "parameters": [
          {
            "name": "consentKey",
            "in": "query",
            "description": "consentKey of the user document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified ConsentKey doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "description": "Retrieve Consents",
        "operationId": "GetConsents",
        "summary": "Returns Consents",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/ConsentsArray"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "description": "Update Consents",
        "operationId": "UpdateConsents",
        "summary": "Update Consents",
        "parameters": [
          {
            "name": "consentKey",
            "in": "query",
            "description": "consentKey of the consents document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "consents",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Consents"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified consentKey doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants": {
      "post": {
        "description": "Create Merchants",
        "operationId": "CreateMerchants",
        "summary": "Create Merchants",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "merchant",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Merchant"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Merchant"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/point-of-services": {
      "post": {
        "description": "Create PointOfService",
        "operationId": "CreatePointOfService",
        "summary": "Create PointOfService",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "pointOfServiceDoc",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PointOfServiceDoc"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PointOfServiceDoc"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/points-of-service/{businessunitID}": {
      "post": {
        "description": "Create Points-Of-Service by businessunitID",
        "operationId": "CreatePointsOfService",
        "summary": "Create Points-Of-Service by businessunitID",
        "parameters": [
          {
            "name": "businessunitID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "pointOfService",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PointOfService"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/PointOfService"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "description": "Retrieve PointsOfService",
        "operationId": "GetPointsOfService",
        "summary": "Returns PointsOfService",
        "parameters": [
          {
            "name": "businessunitID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/PointOfServiceArray"
            }
          },
          "404": {
            "description": "The specified businessunitID doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/products": {
      "post": {
        "description": "Create product",
        "operationId": "CreateProduct",
        "summary": "Create product",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "products",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "description": "Retrieve products",
        "operationId": "SearchProducts",
        "summary": "Search products by id merchantID or productName",
        "parameters": [
          {
            "name": "merchantID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "productName",
            "in": "query",
            "description": "productName of the product document",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/ProductsArray"
            }
          },
          "404": {
            "description": "The specified product documentId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/sales-persons/{businessunitID}": {
      "post": {
        "description": "Create SalesPersons in Merchant document",
        "operationId": "CreateSalesPersons",
        "summary": "Create SalesPersons",
        "parameters": [
          {
            "name": "businessunitID",
            "in": "path",
            "description": "businessunitID of the BusinessUnits document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "salesPersons",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SalesPersons"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/SalesPersons"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "description": "Retrieve SalesPersons",
        "operationId": "GetSalesPersons",
        "summary": "Returns SalesPersons",
        "parameters": [
          {
            "name": "businessunitID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/SalesPersonsArray"
            }
          },
          "404": {
            "description": "The specified businessunitID doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/webshops": {
      "post": {
        "description": "Create webshop",
        "operationId": "CreateWebshop",
        "summary": "Create webshop",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "webshop",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Webshop"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Webshop"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/account-lists": {
      "get": {
        "description": "Retrieve AccountLists by merchantId",
        "operationId": "GetAccountLists",
        "summary": "Returns AccountLists by merchantId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/AccountList"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "description": "Update AccountLists",
        "operationId": "UpdateAccountLists",
        "summary": "Update UpdateAccountLists",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountList",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AccountList"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "description": "Delete AccountLists",
        "operationId": "DeleteAccountLists",
        "summary": "Delete AccountLists",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/balance-accounts/{id}": {
      "delete": {
        "description": "Delete BalanceAccount by id",
        "operationId": "DeleteBalanceAccount",
        "summary": "Delete BalanceAccount by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the BalanceAccounts document",
            "required": true,
            "type": "string"
          },
          {
            "name": "merchantID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "description": "Retrieve BalanceAccounts by id and merchantId",
        "operationId": "BalanceAccounts",
        "summary": "Retrieve BalanceAccounts by id and merchantId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the balance-accounts document",
            "required": true,
            "type": "string"
          },
          {
            "name": "merchantID",
            "in": "query",
            "description": "issuerMerchantID of the balance-accounts document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/BalanceAccount"
            }
          },
          "404": {
            "description": "The specified id or merchantId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "description": "Update BalanceAccount",
        "operationId": "UpdateBalanceAccount",
        "summary": "Update BalanceAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "merchantID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "balanceAccount",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BalanceAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified id or merchantId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/bank-accounts": {
      "delete": {
        "description": "Delete BankAccount by merchantID and account",
        "operationId": "DeleteBankAccount",
        "summary": "Delete BankAccounts by merchantID and account",
        "parameters": [
          {
            "name": "merchantID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "account",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified merchantID or account doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "description": "Update BankAccounts by merchantID and account",
        "operationId": "UpdateBankAccounts",
        "summary": "Update BankAccounts by merchantID and account",
        "parameters": [
          {
            "name": "merchantID",
            "in": "query",
            "description": "merchantID of the merchant document",
            "required": true,
            "type": "string"
          },
          {
            "name": "account",
            "in": "query",
            "description": "account of the merchant document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "payoutBankAccount",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PayoutBankAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified product documentId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/business-units/{id}": {
      "get": {
        "description": "Retrieve business unit by id",
        "operationId": "GetBusinessUnit",
        "summary": "Retrieve business unit by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BusinessUnits"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "description": "Delete BusinessUnit by id",
        "operationId": "DeleteBusinessUnit",
        "summary": "Delete BusinessUnit by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the BusinessUnit document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "description": "Update BusinessUnits",
        "operationId": "UpdateBusinessUnits",
        "summary": "Update BusinessUnits",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "businessUnits",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BusinessUnits"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/image/{blobName}": {
      "delete": {
        "description": "Delete Image by blobName",
        "operationId": "DeleteImage",
        "summary": "Delete Image by blobName",
        "parameters": [
          {
            "name": "blobName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified blobName doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}": {
      "get": {
        "description": "Retrieve merchant by id",
        "operationId": "GetMerchant",
        "summary": "Returns merchant by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the merchant document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Merchant"
            }
          },
          "404": {
            "description": "The specified merchant documentId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "description": "Update merchant by id",
        "operationId": "Updatemerchant",
        "summary": "Update merchant by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the merchants document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "merchant",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Merchant"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponse"
            }
          },
          "404": {
            "description": "The specified Id  doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "description": "Delete Merchant by id",
        "operationId": "DeleteMerchant",
        "summary": "Delete Merchant by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the merchant document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchant-link/{merchantID}": {
      "delete": {
        "description": "Delete MerchantLink merchantID",
        "operationId": "DeleteMerchantLink",
        "summary": "Delete MerchantLink merchantID",
        "parameters": [
          {
            "name": "merchantID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/point-of-services": {
      "get": {
        "description": "Retrieve PointOfService",
        "operationId": "GetPointOfService",
        "summary": "Returns PointOfService",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pointOfServiceID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "businessUnitID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/PointOfServiceDocArray"
            }
          },
          "404": {
            "description": "The specified id or pointOfServiceID or businessUnitID doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "description": "Update PointOfServices by merchantID",
        "operationId": "UpdatePointOfServices",
        "summary": "Update PointOfServices by merchantID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pointOfServiceID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "businessUnitID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "pointOfServiceDoc",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PointOfServiceDoc"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified id or pointOfServiceID or businessUnitID doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "description": "Delete PointOfServices by merchantId",
        "operationId": "DeletePointOfServices",
        "summary": "Delete PointOfServices by merchantId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pointOfServiceID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "businessUnitID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponse"
            }
          },
          "404": {
            "description": "The specified id or pointOfServiceID or businessUnitID doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/points-of-service": {
      "delete": {
        "description": "Delete PointsOfService by businessunitID and pointOfServiceID",
        "operationId": "DeletePointsOfService",
        "summary": "Delete PointsOfService by businessunitID and pointOfServiceID",
        "parameters": [
          {
            "name": "businessunitID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "pointOfServiceID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified businessunitID or pointOfServiceID doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "description": "Update PointsOfService",
        "operationId": "PointsOfService",
        "summary": "Update PointsOfService",
        "parameters": [
          {
            "name": "businessunitID",
            "in": "query",
            "description": "businessunitID of the businessunit document",
            "required": true,
            "type": "string"
          },
          {
            "name": "pointOfServiceID",
            "in": "query",
            "description": "pointOfServiceID of the point-of-service document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "pointOfService",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PointOfService"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation"
          },
          "404": {
            "description": "The specified pointOfServiceID or businessunitID doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "description": "Retrieve product by id",
        "operationId": "GetProduct",
        "summary": "Returns product by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          },
          "404": {
            "description": "The specified product documentId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "description": "Update product properties by id",
        "operationId": "UpdateProduct",
        "summary": "Update product by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "products",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponse"
            }
          },
          "404": {
            "description": "The specified product documentId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "description": "Delete product by id",
        "operationId": "DeleteProduct",
        "summary": "Delete product by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponse"
            }
          },
          "404": {
            "description": "The specified product documentId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/sales-persons": {
      "delete": {
        "description": "DeleteSalesPerson by businessunitID",
        "operationId": "DeleteSalesPerson",
        "summary": "DeleteSalesPerson by businessunitID",
        "parameters": [
          {
            "name": "businessunitID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "salesPersonID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified businessunitID or salesPersonID doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "description": "Update SalesPersons",
        "operationId": "UpdateSalesPersons",
        "summary": "Update SalesPersons",
        "parameters": [
          {
            "name": "businessunitID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "salesPersonID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "salesPersons",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SalesPersons"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified businessunitID or salesPersonID doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/user-merchant-link": {
      "delete": {
        "description": "Delete UserMerchantLink by userID and merchantID",
        "operationId": "DeleteUserMerchantLink",
        "summary": "Delete UserMerchantLink by userID and merchantID",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "userMerchantLink",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserMerchantLink"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/webshops/{id}": {
      "get": {
        "description": "Retrieve webshop by id",
        "operationId": "GetWebshop",
        "summary": "Returns webshop by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the webshop document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Webshop"
            }
          },
          "404": {
            "description": "The specified webshop documentId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "description": "Update webshop properties by id",
        "operationId": "UpdateWebshop",
        "summary": "Update webshop by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the webshop document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "webshop",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Webshop"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponse"
            }
          },
          "404": {
            "description": "The specified webshop documentId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "description": "Delete webshop by id",
        "operationId": "DeleteWebshop",
        "summary": "Delete webshop by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the webshop document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponse"
            }
          },
          "404": {
            "description": "The specified webshop documentId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/forgot-pass": {
      "post": {
        "description": "Forgot Password",
        "operationId": "ForgotPassword",
        "summary": "Forgot Password",
        "parameters": [
          {
            "name": "changeEmail",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ChangeEmail"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/account-transaction-summary": {
      "get": {
        "description": "Retrieve AccountTransactionSummary",
        "operationId": "GetAccountTransactionSummary",
        "summary": "Returns AccountTransactionSummary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/TransactionSummary"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/account-transactions": {
      "get": {
        "description": "Retrieve AccountTransaction",
        "operationId": "GetAccountTransaction",
        "summary": "Returns AccountTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/AccountTransaction"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/users/{id}/business-units": {
      "get": {
        "description": "Retrieve BusinessUnit by userID",
        "operationId": "GetBusinessUnitByUserId",
        "summary": "Returns BusinessUnit by userID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/BusinessUnitsArray"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchant-balance/{merchantID}": {
      "get": {
        "description": "Retrieve MerchantBalance by merchantID",
        "operationId": "GetMerchantBalance",
        "summary": "Returns MerchantBalance by merchantID",
        "parameters": [
          {
            "name": "merchantID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/BalanceAccountArray"
            }
          },
          "404": {
            "description": "The specified merchantID doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/payout-transactions/{merchantID}": {
      "get": {
        "description": "Retrieve PayoutTransactions by merchantID",
        "operationId": "GetPayoutTransactions",
        "summary": "Returns PayoutTransactions by merchantID",
        "parameters": [
          {
            "name": "merchantID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/PayoutTransaction"
            }
          },
          "404": {
            "description": "The specified merchantID doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/transactions/{merchantID}/daterange/{fromDate}/{toDate}": {
      "get": {
        "description": "Retrieve Transactions by merchantID and date",
        "operationId": "GetTransactions",
        "summary": "Returns Transactions by merchantID and date",
        "parameters": [
          {
            "name": "merchantID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/MerchantTransactionArray"
            }
          },
          "404": {
            "description": "The specified merchantId or date doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/users/{id}/merchants": {
      "get": {
        "description": "Retrieve Merchants by userId",
        "operationId": "GetMerchants",
        "summary": "Returns Merchants by userId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "_id of user document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/MerchantArray"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/orders": {
      "get": {
        "description": "Retrieve Orders by merchantId",
        "operationId": "GetOrders",
        "summary": "Returns Orders by merchantId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "_id of merchant document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/OrdersArray"
            }
          },
          "404": {
            "description": "The specified userId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/payment-providers": {
      "get": {
        "description": "Retrieve PaymentProviders by country",
        "operationId": "GetPaymentProviders",
        "summary": "Returns PaymentProviders by country",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/PaymentProvider"
            }
          },
          "404": {
            "description": "The specified country doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/transactions": {
      "get": {
        "description": "Retrieve transaction By mercahantId",
        "operationId": "GetTransactionsBymercahantId",
        "summary": "Returns transaction By mercahantId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/PaymentTransaction"
            }
          },
          "404": {
            "description": "The specified merchantId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/payout-frequency/{merchantID}": {
      "patch": {
        "description": "Update PayoutFrequency by merchantID",
        "operationId": "UpdatePayoutFrequency",
        "summary": "Update PayoutFrequency by merchantID",
        "parameters": [
          {
            "name": "merchantID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "payoutFrequency",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PayoutFrequency"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponse"
            }
          },
          "404": {
            "description": "The specified merchantId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "description": "Retrieve PayoutFrequency",
        "operationId": "GetPayoutFrequency",
        "summary": "Returns PayoutFrequency",
        "parameters": [
          {
            "name": "merchantID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/PayoutFrequency"
            }
          },
          "404": {
            "description": "The specified merchantId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/priceplans": {
      "get": {
        "description": "Retrieve Priceplans",
        "operationId": "GetPriceplans",
        "summary": "Returns Priceplans",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "type": "string"
          },
          {
            "name": "languageCode",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/PricePlan"
            }
          },
          "404": {
            "description": "The specified details doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/product-classes": {
      "get": {
        "description": "Retrieve ProductPlasses",
        "operationId": "GetProductPlasses",
        "summary": "Returns ProductPlasses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/ProductClasses"
            }
          },
          "404": {
            "description": "The specified merchantId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/users/{id}/products": {
      "get": {
        "description": "Retrieve Products by userId",
        "operationId": "GetProducts",
        "summary": "Returns Products by userId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "_id of user doc",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/ProductsArray"
            }
          },
          "404": {
            "description": "The specified merchant documentId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/sas-token": {
      "get": {
        "description": "Retrieve SasToken",
        "operationId": "GetSasToken",
        "summary": "Returns SasToken",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/SasToken"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/statistics": {
      "get": {
        "description": "Retrieve Statistics",
        "operationId": "GetStatistics",
        "summary": "Returns Statistics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "statistics",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "year",
            "in": "query",
            "type": "string"
          },
          {
            "name": "month",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/DailyStatistics"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/invoice-details": {
      "get": {
        "description": "Retrieve InvoiceDetails",
        "operationId": "GetInvoiceDetails",
        "summary": "Returns InvoiceDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "invoiceID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/invoices": {
      "get": {
        "description": "Retrieve Invoice",
        "operationId": "GetInvoice",
        "summary": "Returns Invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Retrieve user by id",
        "operationId": "GetUser",
        "summary": "Returns user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "The specified user documentId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/send-notification/{id}": {
      "patch": {
        "description": "Update SendNotification by id",
        "operationId": "UpdateSendNotification",
        "summary": "Update SendNotification by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "sendNotifications",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SendNotifications"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "description": "Retrieve SendNotification",
        "operationId": "GetSendNotification",
        "summary": "Returns SendNotification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SendNotifications"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/get-team/{merchantID}": {
      "get": {
        "description": "Retrieve Team by mercahntId",
        "operationId": "GetTeam",
        "summary": "Returns Team by mercahntId",
        "parameters": [
          {
            "name": "merchantID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Team"
            }
          },
          "404": {
            "description": "The specified merchantID doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/vat-classes/{countryCode}": {
      "get": {
        "description": "Retrieve VatClasses by countryCode",
        "operationId": "GetVatClasses",
        "summary": "Returns VatClasses by countryCode",
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/VatClassArray"
            }
          },
          "404": {
            "description": "The specified countryCode doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/webshops": {
      "get": {
        "description": "Retrieve Webshops by merchantId",
        "operationId": "GetWebshops",
        "summary": "Returns Webshops by merchantId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WebshopArray"
            }
          },
          "404": {
            "description": "The specified merchantId doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/invitetomerchant": {
      "post": {
        "description": "Invitetomerchant",
        "operationId": "Invitetomerchant",
        "summary": "Invitetomerchant",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "invitetomerchant",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Invitetomerchant"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/login": {
      "post": {
        "description": "Login user",
        "operationId": "LoginUser",
        "summary": "Login user",
        "parameters": [
          {
            "name": "login",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/set-priceplan": {
      "post": {
        "description": "SetPriceplan",
        "operationId": "SetPriceplan",
        "summary": "SetPriceplan",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "setPriceplan",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SetPriceplan"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/signup": {
      "post": {
        "description": "Signup",
        "operationId": "Signup",
        "summary": "Signup",
        "parameters": [
          {
            "name": "signup",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Signup"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserSignup"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/user-details/{id}": {
      "patch": {
        "description": "Update UserDetails by id",
        "operationId": "UpdateUserDetails",
        "summary": "Update UserDetails by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/language/{userID}": {
      "patch": {
        "description": "Update Language by userID",
        "operationId": "UpdateLanguage",
        "summary": "Update Language by userID",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "language",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Language"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UpdateResponseWithCode"
            }
          },
          "404": {
            "description": "The specified userID doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchant-mobile-payment-codes": {
      "post": {
        "description": "Create Merchants mobile payment codes",
        "operationId": "CreateMerchantsMobilePaymentsCodes",
        "summary": "Create Merchants mobile payment codes",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "merchantMobilePaymentCodes",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MerchantMobilePaymentCodes"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MerchantMobilePaymentCodes"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/merchant-mobile-payment-codes": {
      "delete": {
        "description": "Delete Merchants mobile payment codes",
        "operationId": "DeleteMerchantsmobilepaymentcodes",
        "summary": "Delete Merchants mobile payment codes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the merchant document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "description": "Get Merchants mobile payment codes",
        "operationId": "GeteMerchantsmobilepaymentcodes",
        "summary": "Get Merchants mobile payment codes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the merchant document",
            "required": true,
            "type": "string"
          },
          {
            "name": "webshopID",
            "in": "query",
            "description": "ID of the webshop document",
            "type": "string"
          },
          {
            "name": "productID",
            "in": "query",
            "description": "ID of the product document",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/MerchantMobilePaymentCodes"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "description": "Update Merchants mobile payment codes",
        "operationId": "UpdateeMerchantsmobilepaymentcodes",
        "summary": "Update Merchants mobile payment codes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the merchant document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "merchantMobilePaymentCodes",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MerchantMobilePaymentCodes"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/delete-merchant-psp-source": {
      "delete": {
        "description": "Delete Merchants Psp Source",
        "operationId": "DeleteMerchantsPspSource",
        "summary": "Delete Merchants Psp Source",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "deleteMerchantPspRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DeleteMerchantPspRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/delete-user/{verificationCode}": {
      "delete": {
        "description": "Delete verificationCode",
        "operationId": "DeleteVerificationCode",
        "summary": "Delete verificationCod",
        "parameters": [
          {
            "name": "verificationCode",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/download-user-data": {
      "get": {
        "description": "Download User Data",
        "operationId": "download-user-data",
        "summary": "Download User Data",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/UserData"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/forgotten-password-confirm": {
      "post": {
        "description": "Forgotten Password Confirm",
        "operationId": "forgotten-password-confirm",
        "summary": "Forgotten Password Confirm",
        "parameters": [
          {
            "name": "login",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/generate-mpc-qr-code/{mobilePaymentCodeID}": {
      "get": {
        "description": "Generate Mpc-qr-code",
        "operationId": "generate-mpc-qr-code",
        "summary": "Generate Mpc-qr-code",
        "parameters": [
          {
            "name": "mobilePaymentCodeID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Qrcode"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/generate-pass-batch": {
      "post": {
        "description": "Generate Pass Batch",
        "operationId": "generate-pass-batch",
        "summary": "Generate Pass Batch",
        "parameters": [
          {
            "name": "generatepassbatchReq",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GeneratepassbatchReq"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Generatepassbatch"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/generate-qr": {
      "post": {
        "description": "Generate qr",
        "operationId": "generate-qr",
        "summary": "Generate qr/{mobilePaymentCodeID}",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "qrRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/QrRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Qrcode"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/accounts-ledger-transactions": {
      "get": {
        "description": "Get Accounts Ledger Transactions",
        "operationId": "get-accounts-ledger-transactions",
        "summary": "Get Accounts Ledger Transactions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/AccountsLedgerTransactions"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/clearingreport": {
      "get": {
        "description": "Get clearingreport",
        "operationId": "get-clearingreport",
        "summary": "Get clearingreport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clearingReportID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/ClearingReport"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/generate-pass-batch-import": {
      "post": {
        "description": "Generate Pass Batch Import",
        "operationId": "generate-pass-batch-import",
        "summary": "Generate Pass Batch Import",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "generatepassbatchImportReq",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GeneratepassbatchImportReq"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/merchant-clearingreports/{year}": {
      "get": {
        "description": "Get Merchant Clearingreports",
        "operationId": "GetMerchant-clearingreports",
        "summary": "Returns Merchant Clearingreports",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerMerchantID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/MerchantClearingReports"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/mobile-payment-codes/{id}": {
      "get": {
        "description": "Get Mobile Payment Codes",
        "operationId": "Get-mobile-payment-codes",
        "summary": "Returns Mobile Payment Codes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/MobilePaymentCode"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/mobile-payment-providers": {
      "get": {
        "description": "Get Mobile Payment Providers",
        "operationId": "Get-mobile-payment-providers",
        "summary": "Returns Mobile Payment Providers",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/MobilePaymentProviders"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/pos-actions": {
      "get": {
        "description": "Get Pos Actions",
        "operationId": "Get-pos-actions",
        "summary": "Returns Pos Actions",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/PosActions"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/redemption/{fromDate}/{toDate}": {
      "get": {
        "description": "Get redemption",
        "operationId": "Get-redemption",
        "summary": "Returns redemption",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "voucherID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Redemption"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/refund-order": {
      "post": {
        "description": "Refund Order",
        "operationId": "refund-order",
        "summary": "Refund Order",
        "parameters": [
          {
            "name": "refundorderReq",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RefundorderReq"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/request-verification-code": {
      "post": {
        "description": "Request Verification Code",
        "operationId": "Request-verification-code",
        "summary": "Request Verification Code",
        "parameters": [
          {
            "name": "requestverificationcodeReq",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RequestverificationcodeReq"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/search-merchants": {
      "get": {
        "description": "Search Merchants",
        "operationId": "search-merchants",
        "summary": "Returns Merchants",
        "parameters": [
          {
            "name": "merchantName",
            "in": "query",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "city",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Merchant"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/set-merchant-psp-source": {
      "post": {
        "description": "set-merchant-psp-source",
        "operationId": "set-merchant-psp-source",
        "summary": "set-merchant-psp-source",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "merchantPspSource",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MerchantPspSource"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/copy-product/{id}": {
      "post": {
        "description": "copy-product",
        "operationId": "copy-product",
        "summary": "copy-product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/do-action": {
      "get": {
        "description": "do-action",
        "operationId": "do-action",
        "summary": "Do Action",
        "parameters": [
          {
            "name": "pointOfServiceID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionCode",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/accounts-ledger-trans-withfilters": {
      "post": {
        "description": "get-accountLedgerTransaction-with-filters",
        "operationId": "accounts-ledger-trans-withfilters",
        "summary": "return accountLedgerTransaction with filters",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SearchParams"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AccountsLedgerTransactions"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/orders-with-filters": {
      "post": {
        "description": "get-orders-with-filters",
        "operationId": "orders-with-filters",
        "summary": "return orders with filters",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderSearchParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OrderSearchParams"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OrdersArray"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/vouchers/{id}/voucherLog": {
      "get": {
        "description": "get-voucherLog",
        "operationId": "get-voucherLog",
        "summary": "return voucherLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/VoucherLog"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/vouchers-withfilters": {
      "post": {
        "description": "get-voucher-with-filters",
        "operationId": "voucher-with-filters",
        "summary": "return voucher with filters",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "voucherSearchParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VoucherSearchParams"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Vouchers"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/send-voucher-delivery": {
      "post": {
        "description": "send-voucher-delivery",
        "operationId": "send-voucher-delivery",
        "summary": "send-voucher-delivery",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "voucherDeliveryReq",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/voucherDeliveryReq"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/set-user-role": {
      "post": {
        "description": "set-user-role",
        "operationId": "set-user-role",
        "summary": "set-user-role",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "setUserRoleReq",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/setUserRoleReq"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/unlink-pos": {
      "post": {
        "description": "unlink-pos",
        "operationId": "unlink-pos",
        "summary": "unlink-pos",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "unlinkPosReq",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/unlinkPosReq"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/accounts-ledger-trans-withfilters-summary": {
      "post": {
        "description": "get-accountLedgerTransaction-with-filters-summary",
        "operationId": "accounts-ledger-trans-withfilters-summary",
        "summary": "return accountLedgerTransaction with filters",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "searchParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SearchParams"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AccountsLedgerTransactionsSummary"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/accept-partner-network-invite": {
      "patch": {
        "description": "Move partner network invite",
        "operationId": "Move-partner-network-invite",
        "summary": "Move partner network invite",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNetworkInviteReq",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/partnerNetworkInviteReq"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/accept-partner-network-member": {
      "patch": {
        "description": "Move partner network member",
        "operationId": "Move-partner-network-member",
        "summary": "Move partner network member",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNetworkMemberReq",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/partnerNetworkMemberReq"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/partner-networks": {
      "post": {
        "description": "create partner networks",
        "operationId": "create-partner-networks",
        "summary": "create partner networks",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNetwork",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/partnerNetwork"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/partnerNetwork"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/partner-networks/{partnerNetworkID}": {
      "delete": {
        "description": "Delete Partner Network",
        "operationId": "Delete-Partner-Network",
        "summary": "Delete Partner Network",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the merchant document",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNetworkID",
            "in": "path",
            "description": "ID of the partner network document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          },
          "404": {
            "description": "The specified details doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "description": "update-partner-network",
        "operationId": "update-partner-network",
        "summary": "update-partner-network",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the merchant document",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNetworkID",
            "in": "path",
            "description": "ID of the partner network document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNetworkUpdate",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/partnerNetworkUpdate"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/partner-network-members/{merchantID}/partner-networks/{partnerNetworkID}": {
      "delete": {
        "description": "Delete Partner Network Member",
        "operationId": "Delete-Partner-Network-Member",
        "summary": "Delete Partner Network Member",
        "parameters": [
          {
            "name": "merchantID",
            "in": "path",
            "description": "ID of the merchant document",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNetworkID",
            "in": "path",
            "description": "ID of the partner network document",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestedMerchantID",
            "in": "query",
            "description": "ID of the partner network document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          },
          "404": {
            "description": "The specified details doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchant/{id}/merchant-partner-networks": {
      "get": {
        "description": "get-merchant-partner-networks",
        "operationId": "get-merchant-partner-networks",
        "summary": "return merchant-partner-networks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/MerchantPartnerNetwork"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/partner-networks/{partnerNetworkID}": {
      "get": {
        "description": "get-partner-networks",
        "operationId": "get-partner-networks",
        "summary": "return partner-networks",
        "parameters": [
          {
            "name": "partnerNetworkID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/partnerNetwork"
            }
          },
          "404": {
            "description": "The specified id doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "description": "update-partner-network-member",
        "operationId": "update-partner-network-member",
        "summary": "update-partner-network-member",
        "parameters": [
          {
            "name": "partnerNetworkID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNetworkUpdateReq",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/partnerNetworkUpdateReq"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/invite-merchant": {
      "patch": {
        "description": "partner network invite",
        "operationId": "partner-network-invite",
        "summary": "partner network invite",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNetworkInvite",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/partnerNetworkInvite"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/send-partner-network-member-request": {
      "patch": {
        "description": "send-partner-network-member-request",
        "operationId": "send-partner-network-member-request",
        "summary": "send-partner-network-member-request",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNetworkMember",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/partnerNetworkMember"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/add-partner-network-products/{partnerNetworkID}": {
      "post": {
        "description": "add products in partner network",
        "operationId": "add-products-in-partner-network",
        "summary": "add products in partner network",
        "parameters": [
          {
            "name": "partnerNetworkID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/remove-partner-network-products/{partnerNetworkID}": {
      "delete": {
        "description": "remove products in partner network",
        "operationId": "remove-products-in-partner-network",
        "summary": "remove products in partner network",
        "parameters": [
          {
            "name": "partnerNetworkID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "productID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "merchantID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/view-partner-network-products/{partnerNetworkID}": {
      "get": {
        "description": "view products in partner network",
        "operationId": "view-products-in-partner-network",
        "summary": "view products in partner network",
        "parameters": [
          {
            "name": "partnerNetworkID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "merchantID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/products"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/add-products-in-webshop": {
      "post": {
        "description": "add products in webshop",
        "operationId": "add-products-in-webshop",
        "summary": "add products in webshop",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "addProductReq",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/addProductReq"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/remove-products-from-webshop/{webShopID}": {
      "delete": {
        "description": "Delete Product from webshop",
        "operationId": "Delete-Product-from-webshop",
        "summary": "Delete Product from webshop",
        "parameters": [
          {
            "name": "webShopID",
            "in": "path",
            "description": "ID of the webshop document",
            "required": true,
            "type": "string"
          },
          {
            "name": "merchantID",
            "in": "query",
            "description": "ID of the merchant document",
            "required": true,
            "type": "string"
          },
          {
            "name": "productID",
            "in": "query",
            "description": "ID of the product document",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          },
          "404": {
            "description": "The specified details doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchant/{id}/deny-partner-member-request": {
      "patch": {
        "description": "deny-partner-member-request",
        "operationId": "deny-partner-member-request",
        "summary": "deny-partner-member-request",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNetworkID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestedMerchantID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchant/{id}/deny-partner-network-invite": {
      "patch": {
        "description": "deny-partner-network-invite",
        "operationId": "deny-partner-network-invite",
        "summary": "deny-partner-network-invite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNetworkID",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchant/{id}/remove-membership": {
      "delete": {
        "description": "remove-own-membership",
        "operationId": "remove-membership",
        "summary": "remove-membership",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the merchant document",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNetworkID",
            "in": "query",
            "description": "ID of the partner network document",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          },
          "404": {
            "description": "The specified details doesn't exist or is invalid"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/search-partner-network": {
      "get": {
        "description": "search-partner-network",
        "operationId": "search-partner-network",
        "summary": "search-partner-network",
        "parameters": [
          {
            "name": "partnerNetworkID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "partnerNetworkName",
            "in": "query",
            "type": "string"
          },
          {
            "name": "merchantID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/partnerNetworkResult"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/deny-invite-request": {
      "patch": {
        "description": "deny-invite-request",
        "operationId": "deny-invite-request",
        "summary": "deny-invite-request",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "removeInviteReq",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/removeInviteReq"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/merchant-priceplan": {
      "get": {
        "description": "get price plan by merchantID",
        "operationId": "get-price-plan-by-merchantID",
        "summary": "get price plan by merchantID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/merchantPricePlan"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/low-value-orders": {
      "post": {
        "description": "add low value orders",
        "operationId": "add-low-value-orders",
        "summary": "add low value orders",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "lowValueOrderReq",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LowValueOrderReq"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LowValueOrderReq"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/pos-data/{pointOfServiceID}": {
      "get": {
        "description": "get pos data merchantID",
        "operationId": "get-pos-data-by-merchantID",
        "summary": "get pos data by merchantID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pointOfServiceID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/posdata"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/merchants/{id}/pos-status/{pointOfServiceID}": {
      "get": {
        "description": "get pos status merchantID",
        "operationId": "get-pos-status-by-merchantID",
        "summary": "get pos status by merchantID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pointOfServiceID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/posstatus"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/billing-provider/{merchantID}": {
      "patch": {
        "description": "update billing provider",
        "operationId": "update billing provider",
        "summary": "update billing provider",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "name": "merchantID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "billingProviderReqBody",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/billingProviderReqBody"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/check-page-link": {
      "post": {
        "operationId": "Check PageLink",
        "description": "Check PageLink",
        "summary": "Check PageLink",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckPageLinkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "security": [
          {
            "apikeyQuery": []
          }
        ]
      }
    },
    "/booking-web": {
      "post": {
        "operationId": "Create BookingWeb",
        "description": "Create BookingWeb",
        "summary": "Create BookingWeb",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingWeb"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BookingWeb"
            }
          }
        },
        "security": [
          {
            "apikeyQuery": []
          }
        ]
      }
    },
    "/merchants/{id}/booking-web/{bookingWebID}": {
      "delete": {
        "operationId": "Delete BookingWeb",
        "description": "Delete BookingWeb",
        "summary": "Delete BookingWeb",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "bookingWebID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "security": [
          {
            "apikeyQuery": []
          }
        ]
      },
      "get": {
        "operationId": "Get BookingWeb",
        "description": "Get BookingWeb",
        "summary": "Get BookingWeb",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "bookingWebID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BookingWeb"
            }
          }
        },
        "security": [
          {
            "apikeyQuery": []
          }
        ]
      },
      "patch": {
        "operationId": "Update BookingWeb",
        "description": "Update BookingWeb",
        "summary": "Update BookingWeb",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "bookingWebID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingWeb"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "security": [
          {
            "apikeyQuery": []
          }
        ]
      }
    },
    "/merchants/{id}/booking-webs": {
      "get": {
        "operationId": "Get BookingWebs",
        "description": "Get BookingWebs",
        "summary": "Get BookingWebs",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "merchantID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BookingWeb"
              }
            }
          }
        },
        "security": [
          {
            "apikeyQuery": []
          }
        ]
      }
    },
    "/webhook-subscriber": {
      "post": {
        "operationId": "Create WebhookSubscriber",
        "description": "Create WebhookSubscriber",
        "summary": "Create WebhookSubscriber",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookSubscriber"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WebhookSubscriber"
            }
          }
        },
        "security": [
          {
            "apikeyQuery": []
          }
        ]
      }
    },
    "/merchants/{id}/webhook-subscriber/{webhookSubscriberID}": {
      "delete": {
        "operationId": "Delete WebhookSubscriber",
        "description": "Delete WebhookSubscriber",
        "summary": "Delete WebhookSubscriber",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "webhookSubscriberID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "security": [
          {
            "apikeyQuery": []
          }
        ]
      },
      "get": {
        "operationId": "Get WebhookSubscriber",
        "description": "Get WebhookSubscriber",
        "summary": "Get WebhookSubscriber",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "webhookSubscriberID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WebhookSubscriber"
            }
          }
        },
        "security": [
          {
            "apikeyQuery": []
          }
        ]
      },
      "patch": {
        "operationId": "Update WebhookSubscriber",
        "description": "Update WebhookSubscriber",
        "summary": "Update WebhookSubscriber",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "merchantID",
            "required": true,
            "type": "string"
          },
          {
            "name": "webhookSubscriberID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookSubscriber"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "security": [
          {
            "apikeyQuery": []
          }
        ]
      }
    },
    "/merchants/{id}/webhook-subscribers": {
      "get": {
        "operationId": "Get WebhookSubscribers by merchantID",
        "description": "Get WebhookSubscribers by merchantID",
        "summary": "Get WebhookSubscribers by merchantID",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "merchantID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WebhookSubscriber"
              }
            }
          }
        },
        "security": [
          {
            "apikeyQuery": []
          }
        ]
      }
    },
    "/do-component-action": {
      "post": {
        "operationId": "DoComponentAction ",
        "description": "Send component actions to a servicebus topic",
        "summary": "Send component actions to a servicebus topic",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Auth token generated from login api",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DoComponentAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "security": [
          {
            "apikeyQuery": []
          }
        ]
      }
    }
  },
  "definitions": {
    "Change": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "billingProviderReqBody": {
      "type": "object",
      "properties": {
        "billingProvider": {
          "type": "string"
        }
      }
    },
    "LowValueOrderReq": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "orderDate": {
          "type": "string"
        },
        "productID": {
          "type": "string"
        },
        "receiverMobilePhone": {
          "type": "string"
        },
        "receiverEmail": {
          "type": "string"
        },
        "validToDate": {
          "type": "string"
        },
        "webshopID": {
          "type": "string"
        },
        "isSent": {
          "type": "boolean"
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "posdata": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "docType": {
            "type": "string"
          },
          "partitionKey": {
            "type": "string"
          },
          "pointOfServiceID": {
            "type": "string"
          },
          "merchantID": {
            "type": "string"
          },
          "eventCode": {
            "type": "string"
          },
          "direction": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Tag"
        }
      }
    },
    "posstatus": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "pointOfServiceID": {
          "type": "string"
        },
        "pointOfServiceName": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "merchantName": {
          "type": "string"
        },
        "businessUnitID": {
          "type": "string"
        },
        "pointOfServiceTypeID": {
          "type": "string"
        },
        "pointOfServiceTypeName": {
          "type": "string"
        },
        "eventCode": {
          "type": "string"
        },
        "isOnline": {
          "type": "boolean"
        },
        "mainImageURL": {
          "type": "string"
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "merchantPricePlan": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "pricePlanName": {
          "type": "string"
        },
        "pricePlanDescription": {
          "type": "string"
        },
        "validFromDate": {
          "type": "string"
        },
        "validToDate": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "isTrialPlan": {
          "type": "boolean"
        },
        "trialPeriodDays": {
          "type": "integer"
        },
        "nextStepPricePlan": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "languageCode": {
          "type": "string"
        },
        "languageName": {
          "type": "string"
        },
        "feeStartupAmount": {
          "type": "integer"
        },
        "feeMonthlySubscriptionBaseAmount": {
          "type": "integer"
        },
        "feeMonthlySubscriptionExtraPerBusinessUnitAmount": {
          "type": "integer"
        },
        "feeMonthlySubscriptionExtraPerUserUnitAmount": {
          "type": "integer"
        },
        "monthlySubscriptionTransactionsCounter": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "feeMonthlySubscriptionAmount": {
                "type": "integer"
              },
              "transactionsCountUpTo": {
                "type": "integer"
              }
            }
          }
        },
        "monthlySubscriptionActiveVouchersCounter": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "feeMonthlySubscriptionAmount": {
                "type": "integer"
              },
              "vouchersCountUpTo": {
                "type": "integer"
              }
            }
          }
        },
        "feePerTransactionAmount": {
          "type": "integer"
        },
        "feePerZeroValueVoucher": {
          "type": "integer"
        },
        "feeMonthlyPerBusinessUnit": {
          "type": "integer"
        },
        "feeMonthlyPerUser": {
          "type": "integer"
        },
        "feeMonthlyPerPartnerNetwork": {
          "type": "string"
        },
        "feeMonthlyPerWebshop": {
          "type": "string"
        },
        "feePerTransactionPercent": {
          "type": "integer"
        },
        "feeMonthlyPerMobilePaymentCode": {
          "type": "integer"
        },
        "payoutForExpiredVouchersPercent": {
          "type": "integer"
        },
        "vatPercent": {
          "type": "integer"
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "partnerNetworkResult": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "partnerNetworkName": {
          "type": "string"
        },
        "partnerNetworkDescription": {
          "type": "string"
        }
      }
    },
    "addProductReq": {
      "type": "object",
      "properties": {
        "webshopID": {
          "type": "string"
        },
        "productID": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        }
      }
    },
    "removeInviteReq": {
      "type": "object",
      "required": [
        "partnerNetworkID",
        "requestedMerchantID",
        "merchantID"
      ],
      "properties": {
        "partnerNetworkID": {
          "type": "string"
        },
        "requestedMerchantID": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        }
      }
    },
    "partnerNetworkUpdateReq": {
      "type": "object",
      "required": [
        "requestedMerchantID",
        "merchantID"
      ],
      "properties": {
        "requestedMerchantID": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "commissionAmount": {
          "type": "string"
        },
        "commissionPercent": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "roles": {
          "type": "string"
        }
      }
    },
    "product": {
      "type": "object",
      "properties": {
        "productID": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "productDescription": {
          "type": "string"
        },
        "conditions": {
          "type": "string"
        },
        "imageURL": {
          "type": "string"
        },
        "isEnabledForSale": {
          "type": "boolean"
        },
        "issuer": {
          "type": "object"
        },
        "salesPrice": {
          "type": "number"
        },
        "vatPercent": {
          "type": "number"
        },
        "vatAmount": {
          "type": "number"
        },
        "vatClass": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "salesPeriodStart": {
          "type": "string"
        },
        "salesPeriodEnd": {
          "type": "string"
        }
      }
    },
    "products": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "productID": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "productDescription": {
            "type": "string"
          },
          "conditions": {
            "type": "string"
          },
          "imageURL": {
            "type": "string"
          },
          "isEnabledForSale": {
            "type": "boolean"
          },
          "issuer": {
            "type": "object"
          },
          "salesPrice": {
            "type": "number"
          },
          "vatPercent": {
            "type": "number"
          },
          "vatAmount": {
            "type": "number"
          },
          "vatClass": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "salesPeriodStart": {
            "type": "string"
          },
          "salesPeriodEnd": {
            "type": "string"
          }
        }
      }
    },
    "RefundorderReq": {
      "type": "object",
      "required": [
        "orderID",
        "reasonForRefund"
      ],
      "properties": {
        "orderID": {
          "type": "string"
        },
        "reasonForRefund": {
          "type": "string"
        }
      }
    },
    "partnerNetworkMemberReq": {
      "type": "object",
      "required": [
        "partnerNetworkID",
        "requestedMerchantID",
        "merchantID",
        "roles"
      ],
      "properties": {
        "partnerNetworkID": {
          "type": "string"
        },
        "requestedMerchantID": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "roles": {
          "type": "string"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "partnerNetworkInviteReq": {
      "type": "object",
      "required": [
        "partnerNetworkID",
        "merchantID"
      ],
      "properties": {
        "partnerNetworkID": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "commissionAmount": {
          "type": "string"
        },
        "commissionPercent": {
          "type": "string"
        }
      }
    },
    "partnerNetworkInvite": {
      "type": "object",
      "required": [
        "partnerNetworkID",
        "invitedMerchantID,",
        "merchantID",
        "roles"
      ],
      "properties": {
        "partnerNetworkID": {
          "type": "string"
        },
        "invitedMerchantID": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "roles": {
          "type": "string"
        }
      }
    },
    "partnerNetworkMember": {
      "type": "object",
      "required": [
        "partnerNetworkID",
        "merchantID",
        "inviteCode"
      ],
      "properties": {
        "partnerNetworkID": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "inviteCode": {
          "type": "string"
        }
      }
    },
    "MerchantPspSource": {
      "type": "object",
      "required": [
        "merchantID",
        "pspSource",
        "pspSourceSecret"
      ],
      "properties": {
        "merchantID": {
          "type": "string"
        },
        "pspSource": {
          "type": "string"
        },
        "pspSourceSecret": {
          "type": "string"
        }
      }
    },
    "RequestverificationcodeReq": {
      "type": "object",
      "properties": {
        "userID": {
          "type": "string"
        },
        "action": {
          "type": "string"
        }
      }
    },
    "MobilePaymentProviders": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "paymentProviders": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "partnerNetwork": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "ownerMerchantID": {
          "type": "string"
        },
        "ownerMerchantName": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "partnerNetworkName": {
          "type": "string"
        },
        "partnerNetworkDescription": {
          "type": "string"
        },
        "isVisible": {
          "type": "boolean"
        },
        "isEnabledForSale": {
          "type": "boolean"
        },
        "commissionAmount": {
          "type": "number"
        },
        "commissionPercent": {
          "type": "number"
        },
        "partnerNetworkMembers": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "inviteCode": {
          "type": "string"
        },
        "partnerNetworkInvites": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "partnerNetworkRequests": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "imageURL": {
          "type": "string"
        },
        "moreInfoURL": {
          "type": "string"
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "partnerNetworkUpdate": {
      "type": "object",
      "properties": {
        "partnerNetworkName": {
          "type": "string"
        },
        "partnerNetworkDescription": {
          "type": "string"
        },
        "isVisible": {
          "type": "boolean"
        },
        "isEnabledForSale": {
          "type": "boolean"
        },
        "commissionAmount": {
          "type": "number"
        },
        "commissionPercent": {
          "type": "number"
        },
        "imageURL": {
          "type": "string"
        },
        "moreInfoURL": {
          "type": "string"
        }
      }
    },
    "MerchantPartnerNetwork": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "merchantName": {
          "type": "string"
        },
        "partnerNetworkMemberships": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "partnerNetworkInvites": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "PosActions": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "MerchantClearingReports": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "accountMerchantID": {
          "type": "string"
        },
        "accountMerchantName": {
          "type": "string"
        },
        "partnerMerchantID": {
          "type": "string"
        },
        "partnerMerchantName": {
          "type": "string"
        },
        "reportYear": {
          "type": "string"
        },
        "clearingReports": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "Redemption": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "redemptionDate": {
          "type": "string"
        },
        "redemptionStatus": {
          "type": "string"
        },
        "voucherID": {
          "type": "string"
        },
        "isRedeemed": {
          "type": "boolean"
        },
        "redemptionCounter": {
          "type": "number"
        },
        "issuer": {
          "type": "object"
        },
        "productID": {
          "type": "string"
        },
        "orderID": {
          "type": "string"
        },
        "orderDate": {
          "type": "string"
        },
        "salesPrice": {
          "type": "number"
        },
        "vatPercent": {
          "type": "number"
        },
        "vatAmount": {
          "type": "number"
        },
        "currency": {
          "type": "string"
        },
        "settlementTransactionID": {
          "type": "boolean"
        },
        "collectorMerchant": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "collectorBusinessUnit": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "collectorPointOfService": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "posProduct": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "voucherValue": {
          "type": "object"
        },
        "redeemedValue": {
          "type": "object"
        },
        "redemptionCode": {
          "type": "string"
        },
        "salesPersonCode": {
          "type": "string"
        },
        "campaignCode": {
          "type": "string"
        },
        "voucherSequenceNumber": {
          "type": "number"
        },
        "voucherCreatedDate": {
          "type": "string"
        },
        "voucherHash": {
          "type": "string"
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "MobilePaymentCode": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "productID": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "webshopID": {
          "type": "string"
        },
        "webshopName": {
          "type": "string"
        },
        "isEnabledForSale": {
          "type": "boolean"
        },
        "issueVouchers": {
          "type": "boolean"
        },
        "doActions": {
          "type": "boolean"
        },
        "dynamicAmountAllowed": {
          "type": "boolean"
        },
        "useMerchantPaymentProviderAccount": {
          "type": "boolean"
        },
        "paymentProviderID": {
          "type": "string"
        },
        "paymentProvider": {
          "type": "string"
        },
        "paymentProviderType": {
          "type": "string"
        },
        "paymentProviderAccount": {
          "type": "string"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "Generatepassbatch": {
      "type": "object",
      "properties": {
        "passTokenArray": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GeneratepassbatchImportReq": {
      "type": "object",
      "properties": {
        "passTokenCount": {
          "type": "number"
        },
        "merchantID": {
          "type": "string"
        },
        "passTokens": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "webshopToken": {
          "type": "string"
        },
        "productID": {
          "type": "string"
        }
      }
    },
    "GeneratepassbatchReq": {
      "type": "object",
      "properties": {
        "passTokenCount": {
          "type": "number"
        },
        "merchantID": {
          "type": "string"
        }
      }
    },
    "AccountsLedgerTransactions": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "accountMerchantID": {
          "type": "string"
        },
        "accountMerchantName": {
          "type": "string"
        },
        "partnerMerchantName": {
          "type": "string"
        },
        "accountsLedgerDate": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "accountBalance": {
          "type": "number"
        },
        "lastTransactionNumber": {
          "type": "number"
        },
        "isSettled": {
          "type": "boolean"
        },
        "settlementDate": {
          "type": "string"
        },
        "isPayoutSent": {
          "type": "boolean"
        },
        "payoutDate": {
          "type": "string"
        },
        "payoutTransactionID": {
          "type": "string"
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "Qrcode": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string"
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "SasToken": {
      "type": "object",
      "properties": {
        "sasToken": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "VatClassArray": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "vatClass": {
            "type": "string"
          },
          "vatName": {
            "type": "string"
          },
          "vatDescription": {
            "type": "string"
          },
          "vatRate": {
            "type": "integer"
          }
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Team": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "lastLoginDate": {
            "type": "string"
          },
          "roles": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "TransactionSummary": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "type": "integer"
        },
        "accountName": {
          "type": "string"
        },
        "debit": {
          "type": "integer"
        },
        "credit": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "PaymentTransaction": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "docType": {
            "type": "string"
          },
          "partitionKey": {
            "type": "string"
          },
          "transactionDate": {
            "type": "string"
          },
          "transactionStatus": {
            "type": "string"
          },
          "orderID": {
            "type": "string"
          },
          "amountPaid": {
            "type": "integer"
          },
          "amountRefunded": {
            "type": "integer"
          },
          "vatPercent": {
            "type": "integer"
          },
          "vatAmount": {
            "type": "integer"
          },
          "currency": {
            "type": "string"
          },
          "sellerMerchantID": {
            "type": "string"
          },
          "sellerMerchantName": {
            "type": "string"
          },
          "sellerBusinessUnitID": {
            "type": "string"
          },
          "sellerBusinessUnitName": {
            "type": "string"
          },
          "sellerPointOfServiceID": {
            "type": "string"
          },
          "sellerPointOfServiceName": {
            "type": "string"
          },
          "webShopID": {
            "type": "string"
          },
          "webShopName": {
            "type": "string"
          },
          "paymentProvider": {
            "type": "string"
          },
          "paymentProviderReference": {
            "type": "string"
          },
          "paymentType": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productID": {
                  "type": "string"
                },
                "productEAN": {
                  "type": "string"
                },
                "productGCN": {
                  "type": "string"
                },
                "productName": {
                  "type": "string"
                },
                "voucherType": {
                  "type": "string"
                },
                "issuer": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "merchantID": {
                        "type": "string"
                      },
                      "merchantName": {
                        "type": "string"
                      }
                    }
                  }
                },
                "salesPrice": {
                  "type": "integer"
                },
                "vatPercent": {
                  "type": "integer"
                },
                "vatAmount": {
                  "type": "integer"
                },
                "currency": {
                  "type": "string"
                }
              }
            }
          },
          "notes": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "PayoutTransaction": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "merchantName": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "payoutTransactions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "payoutTransactionID": {
                "type": "string"
              },
              "bank": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "accountType": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "bic": {
                "type": "string"
              },
              "amount": {
                "type": "integer"
              },
              "referenceText": {
                "type": "string"
              },
              "transactionStatus": {
                "type": "string"
              },
              "transactionRequestDate": {
                "type": "string"
              },
              "transactionCompletedDate": {
                "type": "string"
              },
              "transactionStatusDate": {
                "type": "string"
              }
            }
          }
        },
        "notes": {
          "type": "string"
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "AccountTransaction": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "transactionDate": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "merchantName": {
          "type": "string"
        },
        "transactionSequenceNumber": {
          "type": "integer"
        },
        "transactionType": {
          "type": "string"
        },
        "transactionTypeText": {
          "type": "string"
        },
        "reference": {
          "type": "object",
          "properties": {
            "referenceText": {
              "type": "string"
            },
            "orderID": {
              "type": "string"
            },
            "paymentTransactionID": {
              "type": "string"
            },
            "redemptionID": {
              "type": "string"
            }
          }
        },
        "currency": {
          "type": "string"
        },
        "transactionItems": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "accountTag": {
                "type": "string"
              },
              "accountNumber": {
                "type": "integer"
              },
              "accountName": {
                "type": "string"
              },
              "accountSruCode": {
                "type": "integer"
              },
              "amount": {
                "type": "integer"
              },
              "credit": {
                "type": "integer"
              },
              "debit": {
                "type": "integer"
              }
            }
          }
        },
        "debitTotal": {
          "type": "integer"
        },
        "creditTotal": {
          "type": "integer"
        },
        "amountDiff": {
          "type": "integer"
        },
        "notes": {
          "type": "string"
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Countries": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "countries": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "countryName": {
                "type": "string"
              },
              "isEnabled": {
                "type": "boolean"
              },
              "countryCode": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "defaultPricePlanID": {
                "type": "string"
              },
              "flagIconURL": {
                "type": "string"
              },
              "languages": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "languageName": {
                      "type": "string"
                    },
                    "languageCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Invitetomerchant": {
      "type": "object",
      "properties": {
        "merchantID": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "PricePlan": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "pricePlanName": {
          "type": "string"
        },
        "pricePlanDescription": {
          "type": "string"
        },
        "validFromDate": {
          "type": "string"
        },
        "validToDate": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "isTrialPlan": {
          "type": "boolean"
        },
        "trialPeriodDays": {
          "type": "integer"
        },
        "nextStepPricePlan": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "languageCode": {
          "type": "string"
        },
        "languageName": {
          "type": "string"
        },
        "feeStartupAmount": {
          "type": "integer"
        },
        "feeMonthlySubscriptionBaseAmount": {
          "type": "integer"
        },
        "feeMonthlySubscriptionExtraPerBusinessUnitAmount": {
          "type": "integer"
        },
        "feeMonthlySubscriptionExtraPerUserUnitAmount": {
          "type": "integer"
        },
        "monthlySubscriptionTransactionsCounter": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "feeMonthlySubscriptionAmount": {
                "type": "integer"
              },
              "transactionsCountUpTo": {
                "type": "integer"
              }
            }
          }
        },
        "monthlySubscriptionActiveVouchersCounter": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "feeMonthlySubscriptionAmount": {
                "type": "integer"
              },
              "vouchersCountUpTo": {
                "type": "integer"
              }
            }
          }
        },
        "feePerTransactionPercent": {
          "type": "integer"
        },
        "feePerTransactionAmount": {
          "type": "integer"
        },
        "payoutForExpiredVouchersPercent": {
          "type": "integer"
        },
        "vatPercent": {
          "type": "integer"
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "SetPriceplan": {
      "type": "object",
      "properties": {
        "merchantID": {
          "type": "string"
        },
        "pricePlanID": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Signup": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "iAgreeToTCandPrivacy": {
          "type": "boolean"
        },
        "iAmOlderThan18": {
          "type": "boolean"
        },
        "iAgreeToAgreement": {
          "type": "boolean"
        },
        "country": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "AccountList": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "merchantID": {
                "type": "string"
              },
              "merchantName": {
                "type": "string"
              },
              "userGroups": {
                "type": "string"
              },
              "roles": {
                "type": "string"
              }
            }
          }
        },
        "vatClasses": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "vatClass": {
                "type": "string"
              },
              "vatName": {
                "type": "string"
              },
              "vatDescription": {
                "type": "string"
              },
              "outgoingVatAccountTag": {
                "type": "string"
              },
              "incomingVatAccountTag": {
                "type": "string"
              }
            }
          }
        },
        "productClasses": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "productClass": {
                "type": "string"
              },
              "productClassName": {
                "type": "string"
              },
              "salesAccountTag": {
                "type": "string"
              },
              "costAccountTag": {
                "type": "string"
              },
              "vatClass": {
                "type": "string"
              },
              "vatRate": {
                "type": "integer"
              },
              "isSystemClass": {
                "type": "boolean"
              },
              "showInProductLists": {
                "type": "boolean"
              },
              "currency": {
                "type": "string"
              }
            }
          }
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Language": {
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string"
        },
        "languageName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "BalanceAccount": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "balanceAccountName": {
          "type": "string"
        },
        "balanceAccountDescription": {
          "type": "string"
        },
        "balanceAccountType": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "balanceCurrency": {
          "type": "string"
        },
        "balanceAmount": {
          "type": "integer"
        },
        "balanceAmountLowLimit": {
          "type": "integer"
        },
        "isDefault": {
          "type": "boolean"
        },
        "isVirtualValue": {
          "type": "boolean"
        },
        "blockchainWallet": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "issuerMerchantID": {
          "type": "string"
        },
        "issuerMerchantName": {
          "type": "string"
        },
        "ownerID": {
          "type": "string"
        },
        "ownerType": {
          "type": "string"
        },
        "validFromDate": {
          "type": "string"
        },
        "validToDate": {
          "type": "string"
        },
        "creditLimit": {
          "type": "integer"
        },
        "vcreditInterestRate": {
          "type": "integer"
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "BalanceAccountArray": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "docType": {
            "type": "string"
          },
          "partitionKey": {
            "type": "string"
          },
          "balanceAccountName": {
            "type": "string"
          },
          "balanceAccountDescription": {
            "type": "string"
          },
          "balanceAccountType": {
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "balanceCurrency": {
            "type": "string"
          },
          "balanceAmount": {
            "type": "integer"
          },
          "balanceAmountLowLimit": {
            "type": "integer"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isVirtualValue": {
            "type": "boolean"
          },
          "blockchainWallet": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "issuerMerchantID": {
            "type": "string"
          },
          "issuerMerchantName": {
            "type": "string"
          },
          "ownerID": {
            "type": "string"
          },
          "ownerType": {
            "type": "string"
          },
          "validFromDate": {
            "type": "string"
          },
          "validToDate": {
            "type": "string"
          },
          "creditLimit": {
            "type": "integer"
          },
          "vcreditInterestRate": {
            "type": "integer"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "PayoutBankAccount": {
      "type": "object",
      "properties": {
        "bank": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "account": {
          "type": "string"
        },
        "bic": {
          "type": "string"
        },
        "lastPayout": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "PayoutFrequency": {
      "type": "object",
      "properties": {
        "payoutFrequency": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "DeleteMerchantPspRequest": {
      "type": "object",
      "required": [
        "merchantID",
        "pspSource"
      ],
      "properties": {
        "merchantID": {
          "type": "string"
        },
        "pspSource": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "SalesPersons": {
      "type": "object",
      "required": [
        "salesPersonID"
      ],
      "properties": {
        "salesPersonID": {
          "type": "string"
        },
        "salesPersonName": {
          "type": "string"
        },
        "salesPersonCode": {
          "type": "string"
        },
        "salesPersonIconUrl": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "SalesPersonsArray": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "salesPersonID": {
            "type": "string"
          },
          "salesPersonName": {
            "type": "string"
          },
          "salesPersonCode": {
            "type": "string"
          },
          "salesPersonIconUrl": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "SendNotifications": {
      "type": "object",
      "properties": {
        "viaEmail": {
          "type": "boolean"
        },
        "viaSMS": {
          "type": "boolean"
        },
        "viaPush": {
          "type": "boolean"
        },
        "onMerchantMemberRequest": {
          "type": "boolean"
        },
        "onMerchantMemberRemoval": {
          "type": "boolean"
        },
        "onProfileChanges": {
          "type": "boolean"
        },
        "onvourityNews": {
          "type": "boolean"
        },
        "onPayout": {
          "type": "boolean"
        },
        "onFailedTransaction": {
          "type": "boolean"
        },
        "onFailedPayout": {
          "type": "boolean"
        },
        "onSupportRequest": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "UserMerchantLink": {
      "type": "object",
      "required": [
        "userID",
        "merchantID"
      ],
      "properties": {
        "userID": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "PointOfServiceDoc": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "businessUnitID": {
          "type": "string"
        },
        "parentPointOfServiceID": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "isOpenForSale": {
          "type": "boolean"
        },
        "notOpenForSaleText": {
          "type": "string"
        },
        "isInMaintenanceMode": {
          "type": "boolean"
        },
        "maintenanceModeText": {
          "type": "string"
        },
        "pointOfServiceName": {
          "type": "string"
        },
        "pointOfServiceDescription": {
          "type": "string"
        },
        "deviceHardwareID": {
          "type": "string"
        },
        "deviceMACID": {
          "type": "string"
        },
        "deviceAzureID": {
          "type": "string"
        },
        "location": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "streetRow1": {
                "type": "string"
              },
              "streetRow2": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "contactEmail": {
                "type": "string"
              },
              "contactPhone": {
                "type": "string"
              },
              "locationText": {
                "type": "string"
              },
              "longitude": {
                "type": "string"
              }
            }
          }
        },
        "logoImageURL": {
          "type": "string"
        },
        "mainImageURL": {
          "type": "string"
        },
        "sitePhotoImageURL": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "productID": {
                "type": "string"
              },
              "productName": {
                "type": "string"
              },
              "productDescription": {
                "type": "string"
              },
              "priority": {
                "type": "integer"
              },
              "conditions": {
                "type": "string"
              },
              "imageURL": {
                "type": "string"
              },
              "isEnabledForSale": {
                "type": "boolean"
              },
              "issuer": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "merchantID": {
                      "type": "string"
                    },
                    "merchantName": {
                      "type": "string"
                    }
                  }
                }
              },
              "salesPrice": {
                "type": "integer"
              },
              "vatPercent": {
                "type": "integer"
              },
              "vatAmount": {
                "type": "integer"
              },
              "vatClass": {
                "type": "string"
              },
              "currency": {
                "type": "boolean"
              },
              "spendOnRedemption": {
                "type": "integer"
              },
              "salesPeriodStart": {
                "type": "string"
              },
              "salesPeriodEnd": {
                "type": "boolean"
              }
            }
          }
        },
        "openHours": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "weekday": {
                "type": "string"
              },
              "openFrom": {
                "type": "string"
              },
              "openTo": {
                "type": "string"
              }
            }
          }
        },
        "settings": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          }
        },
        "notes": {
          "type": "string"
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "PointOfServiceDocArray": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "docType": {
            "type": "string"
          },
          "partitionKey": {
            "type": "string"
          },
          "merchantID": {
            "type": "string"
          },
          "businessUnitID": {
            "type": "string"
          },
          "parentPointOfServiceID": {
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isOpenForSale": {
            "type": "boolean"
          },
          "notOpenForSaleText": {
            "type": "string"
          },
          "isInMaintenanceMode": {
            "type": "boolean"
          },
          "maintenanceModeText": {
            "type": "string"
          },
          "pointOfServiceName": {
            "type": "string"
          },
          "pointOfServiceDescription": {
            "type": "string"
          },
          "deviceHardwareID": {
            "type": "string"
          },
          "deviceMACID": {
            "type": "string"
          },
          "deviceAzureID": {
            "type": "string"
          },
          "location": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "streetRow1": {
                  "type": "string"
                },
                "streetRow2": {
                  "type": "string"
                },
                "zip": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "contactEmail": {
                  "type": "string"
                },
                "contactPhone": {
                  "type": "string"
                },
                "locationText": {
                  "type": "string"
                },
                "longitude": {
                  "type": "string"
                }
              }
            }
          },
          "logoImageURL": {
            "type": "string"
          },
          "mainImageURL": {
            "type": "string"
          },
          "sitePhotoImageURL": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productID": {
                  "type": "string"
                },
                "productName": {
                  "type": "string"
                },
                "productDescription": {
                  "type": "string"
                },
                "priority": {
                  "type": "integer"
                },
                "conditions": {
                  "type": "string"
                },
                "imageURL": {
                  "type": "string"
                },
                "isEnabledForSale": {
                  "type": "boolean"
                },
                "issuer": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "merchantID": {
                        "type": "string"
                      },
                      "merchantName": {
                        "type": "string"
                      }
                    }
                  }
                },
                "salesPrice": {
                  "type": "integer"
                },
                "vatPercent": {
                  "type": "integer"
                },
                "vatAmount": {
                  "type": "integer"
                },
                "vatClass": {
                  "type": "string"
                },
                "currency": {
                  "type": "boolean"
                },
                "spendOnRedemption": {
                  "type": "integer"
                },
                "salesPeriodStart": {
                  "type": "string"
                },
                "salesPeriodEnd": {
                  "type": "boolean"
                }
              }
            }
          },
          "openHours": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "weekday": {
                  "type": "string"
                },
                "openFrom": {
                  "type": "string"
                },
                "openTo": {
                  "type": "string"
                }
              }
            }
          },
          "settings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "notes": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "PointOfService": {
      "type": "object",
      "required": [
        "pointOfServiceDeviceID"
      ],
      "properties": {
        "pointOfServiceID": {
          "type": "string"
        },
        "pointOfServiceName": {
          "type": "string"
        },
        "pointOfServiceDescription": {
          "type": "string"
        },
        "pointOfServiceDeviceID": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "latitude": {
          "type": "integer"
        },
        "longitude": {
          "type": "integer"
        },
        "isOnline": {
          "type": "boolean"
        },
        "lastContact": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "PointOfServiceArray": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "pointOfServiceID": {
            "type": "string"
          },
          "pointOfServiceName": {
            "type": "string"
          },
          "pointOfServiceDescription": {
            "type": "string"
          },
          "pointOfServiceDeviceID": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "latitude": {
            "type": "integer"
          },
          "longitude": {
            "type": "integer"
          },
          "isOnline": {
            "type": "boolean"
          },
          "lastContact": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Consents": {
      "type": "object",
      "properties": {
        "consentName": {
          "type": "string"
        },
        "consentKey": {
          "type": "string"
        },
        "documentVersion": {
          "type": "string"
        },
        "documentURL": {
          "type": "string"
        },
        "approvalDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "ConsentsArray": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "consentName": {
            "type": "string"
          },
          "consentKey": {
            "type": "string"
          },
          "documentVersion": {
            "type": "string"
          },
          "documentURL": {
            "type": "string"
          },
          "approvalDate": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "BankAccount": {
      "type": "object",
      "properties": {
        "bank": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "account": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "bic": {
          "type": "string"
        },
        "lastPayout": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "PaymentProvider": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "paymentProviders": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "paymentProviderID": {
                "type": "string"
              },
              "pspName": {
                "type": "string"
              },
              "pspType": {
                "type": "string"
              },
              "isEnabledForSale": {
                "type": "boolean"
              },
              "feePercentOnAmount": {
                "type": "number"
              },
              "feeFixedPerTransaction": {
                "type": "number"
              }
            }
          }
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "BankAccountArray": {
      "type": "array",
      "items": {
        "properties": {
          "bank": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "accountType": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "bic": {
            "type": "string"
          },
          "lastPayout": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "ConfirmSignup": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "ChangePassword": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    },
    "ChangeEmail": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "ChangeName": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "expires": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "loginName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "mobilePhone": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "isLocked": {
          "type": "boolean"
        },
        "isVerified": {
          "type": "boolean"
        },
        "merchants": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "merchantID": {
                "type": "string"
              },
              "merchantName": {
                "type": "string"
              },
              "userGroups": {
                "type": "string"
              },
              "roles": {
                "type": "string"
              }
            }
          }
        },
        "consents": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "consentName": {
                "type": "string"
              },
              "consentKey": {
                "type": "string"
              },
              "documentVersion": {
                "type": "string"
              },
              "documentURL": {
                "type": "string"
              },
              "approvalDate": {
                "type": "string"
              }
            }
          }
        },
        "sendNotifications": {
          "properties": {
            "viaEmail": {
              "type": "boolean"
            },
            "viaSMS": {
              "type": "boolean"
            },
            "viaPush": {
              "type": "boolean"
            },
            "onMerchantMemberRequest": {
              "type": "boolean"
            },
            "onProfileChanges": {
              "type": "boolean"
            },
            "onvourityNews": {
              "type": "boolean"
            },
            "onPayout": {
              "type": "boolean"
            },
            "onFailedTransaction": {
              "type": "boolean"
            },
            "onFailedPayout": {
              "type": "boolean"
            },
            "onSupportRequest": {
              "type": "boolean"
            }
          }
        },
        "lastLoginDate": {
          "type": "string"
        },
        "lastFailedLoginDate": {
          "type": "string"
        },
        "languageCode": {
          "type": "string"
        },
        "languageName": {
          "type": "string"
        },
        "merchantInvites": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "merchantID": {
                "type": "string"
              },
              "merchantName": {
                "type": "string"
              },
              "inviteExpiryDate": {
                "type": "string"
              }
            }
          }
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "UserData": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "mobilePhone": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "isLocked": {
          "type": "boolean"
        },
        "isVerified": {
          "type": "boolean"
        },
        "consents": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "consentName": {
                "type": "string"
              },
              "consentKey": {
                "type": "string"
              },
              "documentVersion": {
                "type": "string"
              },
              "documentURL": {
                "type": "string"
              },
              "approvalDate": {
                "type": "string"
              }
            }
          }
        },
        "sendNotifications": {
          "properties": {
            "viaEmail": {
              "type": "boolean"
            },
            "viaSMS": {
              "type": "boolean"
            },
            "viaPush": {
              "type": "boolean"
            },
            "onMerchantMemberRequest": {
              "type": "boolean"
            },
            "onProfileChanges": {
              "type": "boolean"
            },
            "onvourityNews": {
              "type": "boolean"
            },
            "onPayout": {
              "type": "boolean"
            },
            "onFailedTransaction": {
              "type": "boolean"
            },
            "onFailedPayout": {
              "type": "boolean"
            },
            "onSupportRequest": {
              "type": "boolean"
            }
          }
        },
        "lastLoginDate": {
          "type": "string"
        },
        "lastFailedLoginDate": {
          "type": "string"
        },
        "languageCode": {
          "type": "string"
        },
        "languageName": {
          "type": "string"
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "UpdateResponse": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "UserSignup": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "1bb58cfa-063d-4f5c-be5d-b90cfb64d1d6"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "signupExpiryDate": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "mobilePhone": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "consents": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "consentName": {
                "type": "string"
              },
              "consentKey": {
                "type": "string"
              },
              "documentVersion": {
                "type": "string"
              },
              "documentURL": {
                "type": "string"
              },
              "approvalDate": {
                "type": "string"
              }
            }
          }
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "UpdateResponseWithCode": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number"
        },
        "description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "DailyStatistics": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "number"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "statisticsMonth": {
          "type": "string"
        },
        "salesCurrency": {
          "type": "string"
        },
        "daysOfTheMonth": {
          "type": "object",
          "properties": {
            "1": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "2": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "3": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "4": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "5": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "6": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "7": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "8": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "9": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "10": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "11": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "12": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "13": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "14": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "15": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "16": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "17": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "18": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "19": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "20": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "21": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "22": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "23": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "24": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "25": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "26": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "27": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "28": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "29": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "30": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            },
            "31": {
              "type": "object",
              "properties": {
                "salesAmount": {
                  "type": "number"
                },
                "salesTransactions": {
                  "type": "number"
                },
                "redemptions": {
                  "type": "number"
                }
              }
            }
          }
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "ProductClasses": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "productClass": {
            "type": "string"
          },
          "productClassName": {
            "type": "string"
          },
          "salesAccountTag": {
            "type": "string"
          },
          "costAccountTag": {
            "type": "string"
          },
          "vatClass": {
            "type": "string"
          },
          "vatRate": {
            "type": "number"
          },
          "isSystemClass": {
            "type": "boolean"
          },
          "showInProductLists": {
            "type": "boolean"
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "OrdersArray": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "docType": {
            "type": "string"
          },
          "orderID": {
            "type": "string"
          },
          "orderDate": {
            "type": "string"
          },
          "orderStatus": {
            "type": "string"
          },
          "transactionID": {
            "type": "string"
          },
          "transactionStatus": {
            "type": "string"
          },
          "amountPaid": {
            "type": "number"
          },
          "vatAmount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "walletID": {
            "type": "string"
          },
          "passIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sellerMerchantID": {
            "type": "string"
          },
          "sellerMerchantName": {
            "type": "string"
          },
          "sellerBusinessUnitID": {
            "type": "string"
          },
          "sellerBusinessUnitName": {
            "type": "string"
          },
          "sellerPointOfServiceID": {
            "type": "string"
          },
          "sellerPointOfServiceName": {
            "type": "string"
          },
          "webShopID": {
            "type": "string"
          },
          "webShopName": {
            "type": "string"
          },
          "customerEmail": {
            "type": "string"
          },
          "receiverEmail": {
            "type": "string"
          },
          "receiverText": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productID": {
                  "type": "string"
                },
                "productEAN": {
                  "type": "string"
                },
                "productGCN": {
                  "type": "string"
                },
                "productName": {
                  "type": "string"
                },
                "voucherType": {
                  "type": "string"
                },
                "issuer": {
                  "properties": {
                    "merchantID": {
                      "type": "string"
                    },
                    "merchantName": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "salesPrice": {
                  "type": "number"
                },
                "vatPercent": {
                  "type": "number"
                },
                "vatAmount": {
                  "type": "number"
                },
                "currency": {
                  "type": "string"
                }
              }
            }
          },
          "notes": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          }
        }
      }
    },
    "Merchant": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "merchantName": {
          "type": "string"
        },
        "merchantDescription": {
          "type": "string"
        },
        "companyRegistrationNumber": {
          "type": "string"
        },
        "vatNumber": {
          "type": "string"
        },
        "merchantCurrency": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "isCanceled": {
          "type": "boolean"
        },
        "blockchainWallet": {
          "type": "string"
        },
        "walletAmount": {
          "type": "number"
        },
        "walletCurrency": {
          "type": "string"
        },
        "deliveryAddress": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "streetRow1": {
                "type": "string"
              },
              "streetRow2": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          }
        },
        "invoiceAddress": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "streetRow1": {
                "type": "string"
              },
              "streetRow2": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          }
        },
        "pricePlan": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "pricePlanName": {
                "type": "string"
              },
              "startBillingDate": {
                "type": "string"
              },
              "endBillingDate": {
                "type": "string"
              },
              "feeStartupAmount": {
                "type": "number"
              },
              "feeMonthlySubscriptionBaseAmount": {
                "type": "number"
              },
              "feeMonthlySubscriptionExtraPerBusinessUnitAmount": {
                "type": "number"
              },
              "feeMonthlySubscriptionExtraPerUserUnitAmount": {
                "type": "number"
              },
              "monthlySubscriptionTransactionsCounter": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "feeMonthlySubscriptionAmount": {
                      "type": "number"
                    },
                    "transactionsCountUpTo": {
                      "type": "number"
                    }
                  }
                }
              },
              "monthlySubscriptionActiveVouchersCounter": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "feeMonthlySubscriptionAmount": {
                      "type": "number"
                    },
                    "vouchersCountUpTo": {
                      "type": "number"
                    }
                  }
                }
              },
              "feePerTransactionPercent": {
                "type": "number"
              },
              "feePerTransactionAmount": {
                "type": "number"
              },
              "payoutForExpiredVouchersPercent": {
                "type": "number"
              },
              "feeCurrency": {
                "type": "string"
              },
              "vatPercent": {
                "type": "number"
              }
            }
          }
        },
        "payoutPSP": {
          "type": "string"
        },
        "payoutPSPAccount": {
          "type": "string"
        },
        "transactionsLastMonth": {
          "type": "number"
        },
        "transactionsLastCount": {
          "type": "string"
        },
        "businessUnitsLastMonth": {
          "type": "number"
        },
        "businessUnitsLastCount": {
          "type": "string"
        },
        "vouchersActiveLastMonth": {
          "type": "number"
        },
        "vouchersActiveLastCount": {
          "type": "string"
        },
        "usersLastMonth": {
          "type": "number"
        },
        "usersLastCount": {
          "type": "string"
        },
        "canceledDate": {
          "type": "string"
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "MerchantArray": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "docType": {
            "type": "string"
          },
          "merchantName": {
            "type": "string"
          },
          "merchantDescription": {
            "type": "string"
          },
          "companyRegistrationNumber": {
            "type": "string"
          },
          "vatNumber": {
            "type": "string"
          },
          "merchantCurrency": {
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isCanceled": {
            "type": "boolean"
          },
          "blockchainWallet": {
            "type": "string"
          },
          "walletAmount": {
            "type": "number"
          },
          "walletCurrency": {
            "type": "string"
          },
          "deliveryAddress": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "streetRow1": {
                  "type": "string"
                },
                "streetRow2": {
                  "type": "string"
                },
                "zip": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                }
              }
            }
          },
          "invoiceAddress": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "streetRow1": {
                  "type": "string"
                },
                "streetRow2": {
                  "type": "string"
                },
                "zip": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                }
              }
            }
          },
          "pricePlan": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "pricePlanName": {
                  "type": "string"
                },
                "startBillingDate": {
                  "type": "string"
                },
                "endBillingDate": {
                  "type": "string"
                },
                "feeStartupAmount": {
                  "type": "number"
                },
                "feeMonthlySubscriptionBaseAmount": {
                  "type": "number"
                },
                "feeMonthlySubscriptionExtraPerBusinessUnitAmount": {
                  "type": "number"
                },
                "feeMonthlySubscriptionExtraPerUserUnitAmount": {
                  "type": "number"
                },
                "monthlySubscriptionTransactionsCounter": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "feeMonthlySubscriptionAmount": {
                        "type": "number"
                      },
                      "transactionsCountUpTo": {
                        "type": "number"
                      }
                    }
                  }
                },
                "monthlySubscriptionActiveVouchersCounter": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "feeMonthlySubscriptionAmount": {
                        "type": "number"
                      },
                      "vouchersCountUpTo": {
                        "type": "number"
                      }
                    }
                  }
                },
                "feePerTransactionPercent": {
                  "type": "number"
                },
                "feePerTransactionAmount": {
                  "type": "number"
                },
                "payoutForExpiredVouchersPercent": {
                  "type": "number"
                },
                "feeCurrency": {
                  "type": "string"
                },
                "vatPercent": {
                  "type": "number"
                }
              }
            }
          },
          "payoutPSP": {
            "type": "string"
          },
          "payoutPSPAccount": {
            "type": "string"
          },
          "transactionsLastMonth": {
            "type": "number"
          },
          "transactionsLastCount": {
            "type": "string"
          },
          "businessUnitsLastMonth": {
            "type": "number"
          },
          "businessUnitsLastCount": {
            "type": "string"
          },
          "vouchersActiveLastMonth": {
            "type": "number"
          },
          "vouchersActiveLastCount": {
            "type": "string"
          },
          "usersLastMonth": {
            "type": "number"
          },
          "usersLastCount": {
            "type": "string"
          },
          "canceledDate": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          }
        }
      }
    },
    "BusinessUnits": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "businessUnitName": {
          "type": "string"
        },
        "businessUnitDescription": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "deliveryAddress": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "streetRow1": {
                "type": "string"
              },
              "streetRow2": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          }
        },
        "invoiceAddress": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "streetRow1": {
                "type": "string"
              },
              "streetRow2": {
                "type": "string"
              },
              "zip": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          }
        },
        "pointOfService": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "pointOfServiceID": {
                "type": "string"
              },
              "pointOfServiceName": {
                "type": "string"
              },
              "pointOfServiceDescription": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            }
          }
        },
        "salesPersons": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "salesPersonID": {
                "type": "string"
              },
              "salesPersonName": {
                "type": "string"
              },
              "salesPersonCode": {
                "type": "string"
              },
              "salesPersonIconUrl": {
                "type": "string"
              }
            }
          }
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "BusinessUnitsArray": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "docType": {
            "type": "string"
          },
          "businessUnitName": {
            "type": "string"
          },
          "businessUnitDescription": {
            "type": "string"
          },
          "merchantID": {
            "type": "string"
          },
          "deliveryAddress": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "streetRow1": {
                  "type": "string"
                },
                "streetRow2": {
                  "type": "string"
                },
                "zip": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                }
              }
            }
          },
          "invoiceAddress": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "streetRow1": {
                  "type": "string"
                },
                "streetRow2": {
                  "type": "string"
                },
                "zip": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                }
              }
            }
          },
          "pointOfService": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pointOfServiceID": {
                  "type": "string"
                },
                "pointOfServiceName": {
                  "type": "string"
                },
                "pointOfServiceDescription": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "latitude": {
                  "type": "number"
                },
                "longitude": {
                  "type": "number"
                }
              }
            }
          },
          "salesPersons": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "salesPersonID": {
                  "type": "string"
                },
                "salesPersonName": {
                  "type": "string"
                },
                "salesPersonCode": {
                  "type": "string"
                },
                "salesPersonIconUrl": {
                  "type": "string"
                }
              }
            }
          },
          "createdDate": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          }
        }
      }
    },
    "Products": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "productSKU": {
          "type": "string"
        },
        "productEAN": {
          "type": "string"
        },
        "productGCN": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "productDescription": {
          "type": "string"
        },
        "voucherType": {
          "type": "string"
        },
        "isEnabledForSale": {
          "type": "boolean"
        },
        "issuer": {
          "properties": {
            "merchantID": {
              "type": "string"
            },
            "merchantName": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "salesPrice": {
          "type": "number"
        },
        "vatPercent": {
          "type": "number"
        },
        "vatAmount": {
          "type": "number"
        },
        "currency": {
          "type": "string"
        },
        "settleFullAmountOnFirstRedemption": {
          "type": "boolean"
        },
        "settlementAmountPerRedemption": {
          "type": "number"
        },
        "bundleDiscountAmount": {
          "type": "number"
        },
        "bundleDiscountPercent": {
          "type": "number"
        },
        "resellerCommissionAmount": {
          "type": "number"
        },
        "resellerCommissionPercent": {
          "type": "number"
        },
        "resellerLimitations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "merchantID": {
                "type": "string"
              },
              "merchantName": {
                "type": "string"
              },
              "resellerCommissionAmount": {
                "type": "number"
              },
              "resellerCommissionPercent": {
                "type": "number"
              },
              "currency": {
                "type": "string"
              }
            }
          }
        },
        "collectorLimitationsMerchants": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "merchantID": {
                "type": "string"
              },
              "merchantName": {
                "type": "string"
              }
            }
          }
        },
        "collectorLimitationsBusinessUnits": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "businessUnitID": {
                "type": "string"
              },
              "businessUnitName": {
                "type": "string"
              }
            }
          }
        },
        "collectorLimitationsPointOfService": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "pointOfServiceID": {
                "type": "string"
              },
              "pointOfServiceName": {
                "type": "string"
              }
            }
          }
        },
        "posProductLimitations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "posProductSKU": {
                "type": "string"
              },
              "posProductEAN": {
                "type": "string"
              },
              "posProductName": {
                "type": "string"
              },
              "posProductDescription": {
                "type": "string"
              }
            }
          }
        },
        "redemptionRules": {
          "properties": {
            "redemptionCodeIsRequired": {
              "type": "boolean"
            },
            "redemptionCode": {
              "type": "string"
            },
            "salesPersonCodeIsRequired": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "productValue": {
          "properties": {
            "valueType": {
              "type": "string"
            },
            "spend": {
              "type": "number"
            },
            "redemptionsTotal": {
              "type": "number"
            },
            "fixedAmount": {
              "type": "number"
            },
            "currency": {
              "type": "string"
            },
            "ratioPercent": {
              "type": "number"
            }
          },
          "type": "object"
        },
        "validPeriod": {
          "properties": {
            "salesPeriodStart": {
              "type": "string"
            },
            "salesPeriodEnd": {
              "type": "string"
            },
            "validFromDate": {
              "type": "string"
            },
            "validToDate": {
              "type": "string"
            },
            "validDaysOfWeek": {
              "type": "string"
            },
            "validFromTime": {
              "type": "string"
            },
            "validToTime": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "productSellLimitTotal": {
          "type": "number"
        },
        "productSellLimitLeft": {
          "type": "number"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conditions": {
          "type": "string"
        },
        "campaignCode": {
          "type": "string"
        },
        "imageURL": {
          "type": "string"
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "ProductsArray": {
      "type": "array",
      "items": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "docType": {
            "type": "string"
          },
          "productSKU": {
            "type": "string"
          },
          "productEAN": {
            "type": "string"
          },
          "productGCN": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "productDescription": {
            "type": "string"
          },
          "voucherType": {
            "type": "string"
          },
          "isEnabledForSale": {
            "type": "boolean"
          },
          "issuer": {
            "properties": {
              "merchantID": {
                "type": "string"
              },
              "merchantName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "salesPrice": {
            "type": "number"
          },
          "vatPercent": {
            "type": "number"
          },
          "vatAmount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "settleFullAmountOnFirstRedemption": {
            "type": "boolean"
          },
          "settlementAmountPerRedemption": {
            "type": "number"
          },
          "bundleDiscountAmount": {
            "type": "number"
          },
          "bundleDiscountPercent": {
            "type": "number"
          },
          "resellerCommissionAmount": {
            "type": "number"
          },
          "resellerCommissionPercent": {
            "type": "number"
          },
          "resellerLimitations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "merchantID": {
                  "type": "string"
                },
                "merchantName": {
                  "type": "string"
                },
                "resellerCommissionAmount": {
                  "type": "number"
                },
                "resellerCommissionPercent": {
                  "type": "number"
                },
                "currency": {
                  "type": "string"
                }
              }
            }
          },
          "collectorLimitationsMerchants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "merchantID": {
                  "type": "string"
                },
                "merchantName": {
                  "type": "string"
                }
              }
            }
          },
          "collectorLimitationsBusinessUnits": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "businessUnitID": {
                  "type": "string"
                },
                "businessUnitName": {
                  "type": "string"
                }
              }
            }
          },
          "collectorLimitationsPointOfService": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pointOfServiceID": {
                  "type": "string"
                },
                "pointOfServiceName": {
                  "type": "string"
                }
              }
            }
          },
          "posProductLimitations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "posProductSKU": {
                  "type": "string"
                },
                "posProductEAN": {
                  "type": "string"
                },
                "posProductName": {
                  "type": "string"
                },
                "posProductDescription": {
                  "type": "string"
                }
              }
            }
          },
          "redemptionRules": {
            "properties": {
              "redemptionCodeIsRequired": {
                "type": "boolean"
              },
              "redemptionCode": {
                "type": "string"
              },
              "salesPersonCodeIsRequired": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "productValue": {
            "properties": {
              "valueType": {
                "type": "string"
              },
              "spend": {
                "type": "number"
              },
              "redemptionsTotal": {
                "type": "number"
              },
              "fixedAmount": {
                "type": "number"
              },
              "currency": {
                "type": "string"
              },
              "ratioPercent": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "validPeriod": {
            "properties": {
              "salesPeriodStart": {
                "type": "string"
              },
              "salesPeriodEnd": {
                "type": "string"
              },
              "validFromDate": {
                "type": "string"
              },
              "validToDate": {
                "type": "string"
              },
              "validDaysOfWeek": {
                "type": "string"
              },
              "validFromTime": {
                "type": "string"
              },
              "validToTime": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "productSellLimitTotal": {
            "type": "number"
          },
          "productSellLimitLeft": {
            "type": "number"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "conditions": {
            "type": "string"
          },
          "campaignCode": {
            "type": "string"
          },
          "imageURL": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          }
        }
      }
    },
    "MerchantTransactionArray": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "docType": {
            "type": "string"
          },
          "partitionKey": {
            "type": "string"
          },
          "merchantID": {
            "type": "string"
          },
          "transactionDate": {
            "type": "string"
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "transactionID": {
                  "type": "string"
                },
                "transactionDate": {
                  "type": "string"
                },
                "transactionStatus": {
                  "type": "string"
                },
                "transactionType": {
                  "type": "string"
                },
                "settlementTransactionID": {
                  "type": "string"
                },
                "orderID": {
                  "type": "string"
                },
                "amount": {
                  "type": "number"
                },
                "currency": {
                  "type": "string"
                },
                "merchantWalletAmountBeforeTransaction": {
                  "type": "number"
                },
                "from": {
                  "type": "object",
                  "properties": {
                    "merchantID": {
                      "type": "string"
                    },
                    "walletID": {
                      "type": "string"
                    }
                  }
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "merchantID": {
                      "type": "string"
                    },
                    "walletID": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "createdDate": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          }
        }
      }
    },
    "Webshop": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "ownerMerchantID": {
          "type": "string"
        },
        "isVisible": {
          "type": "boolean"
        },
        "isOpenForSale": {
          "type": "boolean"
        },
        "notOpenForSaleText": {
          "type": "string"
        },
        "isInMaintenanceMode": {
          "type": "boolean"
        },
        "maintenanceModeText": {
          "type": "string"
        },
        "webShopToken": {
          "type": "string"
        },
        "webShopTitle": {
          "type": "string"
        },
        "webShopDescription": {
          "type": "string"
        },
        "logoImageURL": {
          "type": "string"
        },
        "mainImageURL": {
          "type": "string"
        },
        "webShopContact": {
          "properties": {
            "contactCompany": {
              "type": "string"
            },
            "contactPhone": {
              "type": "string"
            },
            "contactEmail": {
              "type": "string"
            },
            "contactStreet1": {
              "type": "string"
            },
            "contactStreet2": {
              "type": "string"
            },
            "contactZipCode": {
              "type": "string"
            },
            "contactCity": {
              "type": "string"
            },
            "contactState": {
              "type": "string"
            },
            "contactCountry": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "productID": {
                "type": "string"
              },
              "productEAN": {
                "type": "string"
              },
              "productGCN": {
                "type": "string"
              },
              "productName": {
                "type": "string"
              },
              "productDescription": {
                "type": "string"
              },
              "conditions": {
                "type": "string"
              },
              "imageURL": {
                "type": "string"
              },
              "voucherType": {
                "type": "string"
              },
              "isEnabledForSale": {
                "type": "boolean"
              },
              "issuer": {
                "properties": {
                  "merchantID": {
                    "type": "string"
                  },
                  "merchantName": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "salesPrice": {
                "type": "number"
              },
              "vatPercent": {
                "type": "number"
              },
              "vatAmount": {
                "type": "number"
              },
              "currency": {
                "type": "string"
              },
              "salesPeriodStart": {
                "type": "string"
              },
              "salesPeriodEnd": {
                "type": "string"
              }
            }
          }
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "WebshopArray": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "docType": {
            "type": "string"
          },
          "ownerMerchantID": {
            "type": "string"
          },
          "isVisible": {
            "type": "boolean"
          },
          "isOpenForSale": {
            "type": "boolean"
          },
          "notOpenForSaleText": {
            "type": "string"
          },
          "isInMaintenanceMode": {
            "type": "boolean"
          },
          "maintenanceModeText": {
            "type": "string"
          },
          "webShopToken": {
            "type": "string"
          },
          "webShopTitle": {
            "type": "string"
          },
          "webShopDescription": {
            "type": "string"
          },
          "logoImageURL": {
            "type": "string"
          },
          "mainImageURL": {
            "type": "string"
          },
          "webShopContact": {
            "properties": {
              "contactCompany": {
                "type": "string"
              },
              "contactPhone": {
                "type": "string"
              },
              "contactEmail": {
                "type": "string"
              },
              "contactStreet1": {
                "type": "string"
              },
              "contactStreet2": {
                "type": "string"
              },
              "contactZipCode": {
                "type": "string"
              },
              "contactCity": {
                "type": "string"
              },
              "contactState": {
                "type": "string"
              },
              "contactCountry": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productID": {
                  "type": "string"
                },
                "productEAN": {
                  "type": "string"
                },
                "productGCN": {
                  "type": "string"
                },
                "productName": {
                  "type": "string"
                },
                "productDescription": {
                  "type": "string"
                },
                "conditions": {
                  "type": "string"
                },
                "imageURL": {
                  "type": "string"
                },
                "voucherType": {
                  "type": "string"
                },
                "isEnabledForSale": {
                  "type": "boolean"
                },
                "issuer": {
                  "properties": {
                    "merchantID": {
                      "type": "string"
                    },
                    "merchantName": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "salesPrice": {
                  "type": "number"
                },
                "vatPercent": {
                  "type": "number"
                },
                "vatAmount": {
                  "type": "number"
                },
                "currency": {
                  "type": "string"
                },
                "salesPeriodStart": {
                  "type": "string"
                },
                "salesPeriodEnd": {
                  "type": "string"
                }
              }
            }
          },
          "createdDate": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          }
        }
      }
    },
    "MerchantMobilePaymentCodes": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "mobilePaymentCodes": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "mobilePaymentCodeID": {
                "type": "string"
              },
              "productID": {
                "type": "string"
              },
              "productName": {
                "type": "string"
              },
              "webshopID": {
                "type": "string"
              },
              "webshopName": {
                "type": "string"
              },
              "isEnabledForSale": {
                "type": "string"
              },
              "issueVouchers": {
                "type": "string"
              },
              "doActions": {
                "type": "string"
              },
              "dynamicAmountAllowed": {
                "type": "string"
              },
              "useMerchantPaymentProviderAccount": {
                "type": "string"
              },
              "paymentProviderID": {
                "type": "string"
              },
              "paymentProvider": {
                "type": "string"
              },
              "paymentProviderType": {
                "type": "string"
              },
              "paymentProviderAccount": {
                "type": "string"
              },
              "actions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "actionCode": {
                      "type": "string"
                    },
                    "actionName": {
                      "type": "string"
                    },
                    "pointOfServiceID": {
                      "type": "string"
                    },
                    "pointofServiceName": {
                      "type": "string"
                    }
                  }
                }
              },
              "createdDate": {
                "type": "string"
              },
              "updatedDate": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "SearchParams": {
      "type": "object",
      "required": [
        "accountMerchantID"
      ],
      "properties": {
        "accountMerchantID": {
          "type": "string"
        },
        "fromDate": {
          "type": "string"
        },
        "toDate": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "isSettled": {
          "type": "boolean"
        },
        "partnerMerchantID": {
          "type": "string"
        },
        "accountsLedgerTransactionID": {
          "type": "string"
        },
        "orderID": {
          "type": "string"
        },
        "clearingAmountMin": {
          "type": "number"
        },
        "clearingAmountMax": {
          "type": "number"
        },
        "isMultiFunctionVoucher": {
          "type": "boolean"
        },
        "productClass": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OrderSearchParams": {
      "type": "object",
      "required": [
        "merchantID"
      ],
      "properties": {
        "merchantID": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "mobilephone": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "orderID": {
          "type": "string"
        },
        "webshopID": {
          "type": "string"
        },
        "orderStatus": {
          "type": "string"
        },
        "fromDate": {
          "type": "string"
        },
        "toDate": {
          "type": "string"
        },
        "sellerMerchantID": {
          "type": "string"
        }
      }
    },
    "VoucherLog": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "orderID": {
          "type": "string"
        },
        "voucherID": {
          "type": "string"
        },
        "voucherName": {
          "type": "string"
        },
        "actionText": {
          "type": "string"
        },
        "actionCode": {
          "type": "string"
        },
        "merchantName": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "webshopName": {
          "type": "string"
        },
        "webshopID": {
          "type": "string"
        },
        "result": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "statusText": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "VoucherSearchParams": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "mobilephone": {
          "type": "string"
        },
        "passToken": {
          "type": "string"
        },
        "voucherToken": {
          "type": "string"
        },
        "orderID": {
          "type": "string"
        },
        "productID": {
          "type": "string"
        },
        "fromOrderDate": {
          "type": "string"
        },
        "toOrderDate": {
          "type": "string"
        },
        "isRedeemed": {
          "type": "string"
        }
      }
    },
    "Vouchers": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "docType": {
            "type": "string"
          },
          "passToken": {
            "type": "string"
          },
          "voucherToken": {
            "type": "string"
          },
          "voucherTitle": {
            "type": "string"
          },
          "voucherDescription": {
            "type": "string"
          },
          "isRedeemed": {
            "type": "boolean"
          },
          "isExpired": {
            "type": "boolean"
          },
          "isCanceled": {
            "type": "boolean"
          },
          "redemptionCounter": {
            "type": "number"
          },
          "issuer": {
            "properties": {
              "merchantID": {
                "type": "string"
              },
              "merchantName": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "productID": {
            "type": "string"
          },
          "orderID": {
            "type": "string"
          },
          "orderDate": {
            "type": "string"
          },
          "salesPrice": {
            "type": "number"
          },
          "vatPercent": {
            "type": "number"
          },
          "vatAmount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "settlementList": {
            "properties": {
              "settlementCurrency": {
                "type": "string"
              },
              "totalSettlementAmount": {
                "type": "number"
              },
              "totalSettlementAmountLeft": {
                "type": "number"
              },
              "settleFullAmountOnFirstRedemption": {
                "type": "boolean"
              },
              "settlementAmountPerRedemption": {
                "type": "number"
              },
              "settlementTransactions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "merchantID": {
                      "type": "string"
                    },
                    "merchantName": {
                      "type": "string"
                    },
                    "merchantType": {
                      "type": "string"
                    },
                    "settlementStatus": {
                      "type": "string"
                    },
                    "settlementTransactionID": {
                      "type": "string"
                    },
                    "settlementAmount": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "type": "object"
          },
          "collectorLimitationsMerchants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "merchantID": {
                  "type": "string"
                },
                "merchantName": {
                  "type": "string"
                }
              }
            }
          },
          "collectorLimitationsBusinessUnits": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "businessUnitID": {
                  "type": "string"
                },
                "businessUnitName": {
                  "type": "string"
                }
              }
            }
          },
          "collectorLimitationsPointOfService": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pointOfServiceID": {
                  "type": "string"
                },
                "pointOfServiceName": {
                  "type": "string"
                }
              }
            }
          },
          "posProductLimitations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "posProductSKU": {
                  "type": "string"
                },
                "posProductEAN": {
                  "type": "string"
                },
                "productGCN": {
                  "type": "string"
                },
                "posProductName": {
                  "type": "string"
                },
                "posProductDescription": {
                  "type": "string"
                }
              }
            }
          },
          "redemptionRules": {
            "properties": {
              "redemptionCodeIsRequired": {
                "type": "boolean"
              },
              "salesPersonCodeIsRequired": {
                "type": "boolean"
              },
              "redemptionCodes": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "type": "object"
          },
          "voucherValue": {
            "properties": {
              "valueType": {
                "type": "string"
              },
              "spend": {
                "type": "number"
              },
              "redemptionsTotal": {
                "type": "number"
              },
              "redemptionsLeft": {
                "type": "number"
              },
              "fixedAmount": {
                "type": "number"
              },
              "currency": {
                "type": "string"
              },
              "ratioPercent": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "validPeriod": {
            "properties": {
              "validFromDate": {
                "type": "string"
              },
              "validToDate": {
                "type": "string"
              },
              "validDaysOfWeek": {
                "type": "string"
              },
              "validFromTime": {
                "type": "string"
              },
              "validToTime": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "conditions": {
            "type": "string"
          },
          "campaignCode": {
            "type": "string"
          },
          "imageURL": {
            "type": "string"
          },
          "isLocked": {
            "type": "boolean"
          },
          "voucherPinCode": {
            "type": "string"
          },
          "voucherSequenceNumber": {
            "type": "number"
          },
          "isRefundAllowed": {
            "type": "boolean"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          }
        }
      }
    },
    "voucherDeliveryReq": {
      "type": "object",
      "required": [
        "voucherID"
      ],
      "properties": {
        "voucherID": {
          "type": "string"
        },
        "notificationType": {
          "type": "string"
        }
      }
    },
    "setUserRoleReq": {
      "type": "object",
      "required": [
        "merchantID",
        "userID",
        "role"
      ],
      "properties": {
        "merchantID": {
          "type": "string"
        },
        "userID": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "unlinkPosReq": {
      "type": "object",
      "properties": {
        "pointOfServiceID": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "deviceHardwareID": {
          "type": "string"
        }
      }
    },
    "QrRequest": {
      "type": "object",
      "properties": {
        "format": {
          "type": "string"
        },
        "size": {
          "type": "number"
        },
        "message": {
          "type": "object"
        }
      }
    },
    "ClearingReport": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "logoURL": {
          "type": "string"
        },
        "accountMerchantID": {
          "type": "string"
        },
        "accountMerchantName": {
          "type": "string"
        },
        "vatNumber": {
          "type": "string"
        },
        "streetRow1": {
          "type": "string"
        },
        "streetRow2": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "partnerMerchant": {
          "type": "object"
        },
        "vourityMerchant": {
          "type": "object"
        },
        "currency": {
          "type": "string"
        },
        "totalAmountToSettle": {
          "type": "number"
        },
        "reportDate": {
          "type": "string"
        },
        "clearingPeriodStartDate": {
          "type": "string"
        },
        "clearingPeriodEndDate": {
          "type": "string"
        },
        "referenceText1": {
          "type": "string"
        },
        "referenceText2": {
          "type": "string"
        },
        "isSettled": {
          "type": "boolean"
        },
        "settlementDate": {
          "type": "string"
        },
        "isPayoutSent": {
          "type": "boolean"
        },
        "payoutDate": {
          "type": "number"
        },
        "payoutTransactionID": {
          "type": "string"
        },
        "categoryData": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "accountingTransactions": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "accountsLedgerTransactions": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "AccountsLedgerTransactionsSummary": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "productClassName": {
            "type": "string"
          },
          "clearingAmountSum": {
            "type": "number"
          },
          "vatAmountSum": {
            "type": "number"
          },
          "numberOfTrans": {
            "type": "number"
          }
        }
      }
    },
    "BookingWeb": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "partitionKey": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "adminRights": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "merchantID" :{
                "type": "string"
              },
              "merchantName" :{
                "type": "string"
              },
              "roles" :{
                "type": "string"
              }
            }
          }
        },
        "isEnabled": {
          "type": "boolean"
        },
        "countryCode": {
          "type": "string"
        },
        "pageLink": {
          "type": "string"
        },
        "bookingWebName": {
          "type": "string"
        },
        "bookingWebDescription": {
          "type": "string"
        },
        "siteAccessMode": {
          "type": "string"
        },
        "isInMaintenanceMode": {
          "type": "boolean"
        },
        "maintenanceModeText": {
          "type": "object",
          "properties": {
            "sv-SE": {
              "type": "string"
            },
            "en-US": {
              "type": "string"
            }
          }
        },
        "seoMetaTitle": {
          "type": "string"
        },
        "seoMetaDescription": {
          "type": "string"
        },
        "logoImageURL": {
          "type": "string"
        },
        "mainImageURL": {
          "type": "string"
        },
        "backgroundColor": {
          "type": "string"
        },
        "headerBackgroundColor": {
          "type": "string"
        },
        "footerBackgroundColor": {
          "type": "string"
        },
        "siteTitle": {
          "$ref": "#/definitions/TextElement"
        },
        "siteDescription": {
          "$ref": "#/definitions/TextElement"
        },
        "thankYouText": {
          "$ref": "#/definitions/TextElement"
        },
        "languageSelector": {
          "type": "object",
          "properties": {
            "defaultLanguage": {
              "type": "string"
            },
            "sv-SE": {
              "type": "string"
            },
            "en-US": {
              "type": "string"
            }
          }
        },
        "footerLinks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "linkID": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "linkURL": {
                "type": "string"
              },
              "linkLabel": {
                "$ref": "#/definitions/TextElement"
              },
              "contentBlob": {
                "type": "object",
                "properties": {
                  "sv-SE": {
                    "type": "string"
                  },
                  "en-US": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "contact": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "contactCompany": {
                "type": "integer"
              },
              "contactPhone": {
                "type": "string"
              },
              "contactEmail": {
                "type": "string"
              },
              "contactStreet1": {
                "type": "string"
              },
              "contactStreet2": {
                "type": "string"
              },
              "contactZipCode": {
                "type": "string"
              },
              "contactCity": {
                "type": "string"
              },
              "contactState": {
                "type": "string"
              },
              "contactCountry": {
                "type": "string"
              }
            }
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "resourceID": {
                "type": "integer"
              },
              "resourceName": {
                "type": "string"
              },
              "imageURL": {
                "type": "string"
              },
              "resourceTypeCode": {
                "type": "string"
              },
              "resourceTypeIconURL": {
                "type": "string"
              },
              "statusCode": {
                "type": "string"
              },
              "texts": {
                "type": "object",
                "properties": {
                  "publicName": {
                    "$ref": "#/definitions/TextElement"
                  },
                  "publicDescriptionShort": {
                    "$ref": "#/definitions/TextElement"
                  }
                }
              }
            }
          }
        },
        "rating": {
          "type": "number"
        },
        "totalRatingValue": {
          "type": "number"
        },
        "numberofRatings": {
          "type": "number"
        },
        "ratingDetails": {
          "type": "object",
          "properties": {
            "numberofRatings1": {
              "type": "number"
            },
            "numberofRatings2": {
              "type": "number"
            },
            "numberofRatings3": {
              "type": "number"
            },
            "numberofRatings4": {
              "type": "number"
            },
            "numberofRatings5": {
              "type": "number"
            }
          }
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "TextElement": {
      "type": "object",
      "properties": {
        "textColor": {
          "type": "string"
        },
        "textSize": {
          "type": "integer"
        },
        "textStyle": {
          "type": "string"
        },
        "backgroundColor": {
          "type": "string"
        },
        "texts": {
          "type": "object",
          "properties": {
            "sv-SE": {
              "type": "string"
            },
            "en-US": {
              "type": "string"
            }
          }
        }
      }
    },
    "CheckPageLinkRequest": {
      "type": "object",
      "properties": {
        "pageLink": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        }
      },
      "required": [
        "pageLink",
        "countryCode"
      ]
    },
    "CheckPageLinkResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "isExist": {
          "type": "boolean"
        }
      }
    },
    "WebhookSubscriber": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "merchantID": {
          "type": "string"
        },
        "adminRights": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "merchantID": {
                "type": "string"
              },
              "merchantName": {
                "type": "string"
              },
              "roles": {
                "type": "string"
              }
            }
          }
        },
        "subscriberName": {
          "type": "string"
        },
        "subscriberDescription": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "sourceObjectID": {
          "type": "string"
        },
        "sourceObjectName": {
          "type": "string"
        },
        "sourceObjectType": {
          "type": "string"
        },
        "webhookURL": {
          "type": "string"
        },
        "sendBasicAuth": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        },
        "sendHeaderParameters": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "headerKey": {
                "type": "string"
              },
              "headerValue": {
                "type": "string"
              }
            }
          }
        },
        "doRefundIfWebhookSendFails": {
          "type": "boolean"
        },
        "createdDate": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        }
      }
    },
    "DoComponentAction": {
      "type": "object",
      "properties": {
        "merchantID": {
          "type": "string"
        },
        "actionCode": {
          "type": "string"
        },
        "componentID": {
          "type": "string"
        },
        "merchantName": {
          "type": "string"
        },
        "actionName": {
          "type": "string"
        },
        "componentName": {
          "type": "string"
        },
        "actionParameters": {
          "type": "object",
          "properties": {
            "something1": {
              "type": "string"
            },
            "timer2": {
              "type": "string"
            }
          }
        }
      },
      "required": [
        "merchantID",
        "actionCode",
        "componentID"
      ]
    }
  },
  "tags": []
}